{"version":3,"sources":["utils/streak.ts","utils/users.ts","store/reducers.ts","store/types.ts","utils/index.ts","components/Checkbox.tsx","store/actions.ts","components/HabitCard.tsx","components/Home.tsx","components/HabitForm.tsx","components/NavBar.tsx","components/SignupForm.tsx","components/LoginForm.tsx","components/NotFound.tsx","components/PrivateRoute.tsx","components/LandingPage.tsx","components/App.tsx","index.tsx","images/cliplist.png","images/clipshapes.png"],"names":["updateHabitStreak","habit","now","moment","startOf","newStreak","updateStreak","startDate","endDate","streak","isAfter","currentLength","length","correctLength","getStreakLength","streakDiff","i","push","slice","diff","getLocalStorageItem","key","window","localStorage","getItem","setLocalStorageItem","value","setItem","insertUser","user","users","username","password","findUsersKey","JSON","stringify","initialState","initialized","currentUser","userStates","readState","stateJson","parsedState","parse","decodeState","error","console","reduce","state","action","type","payload","userState","uid","lastId","newUserState","habits","currentUserState","id","obj","Object","keys","map","Number","filter","objectKey","accObj","check","accumulatedUserState","parsed","decodeUserState","acc","decodedHabits","parsedHabit","toString","ISO_8601","newHabit","Checkbox","props","className","children","disabled","deleteHabit","setState","updateCurrentUser","connector","connect","handleStreakClick","event","target","checked","dispatch","handleDeleteClick","preventDefault","renderCollapsed","oldStreak","title","startOfWeek","endOfWeek","renderStreak","render","collapsed","renderExpanded","streakStatus","index","lastIndex","onChange","log","goal","accountabilityPartner","name","email","endDateToString","format","startDateToString","this","to","href","onClick","React","Component","habitList","renderEmpty","useState","useForm","register","handleSubmit","setValue","errors","useEffect","toDate","handleDatePickerChange","date","onSubmit","data","editHabit","addHabit","history","defaultValue","placeholder","ref","required","minDate","selected","maxLength","message","pattern","ConnectedNavBar","habitsObj","habitIds","buttonLabel","handleLogout","showView","location","pathname","toggleCollapse","withRouter","setError","usersFromLocalStorage","verifypassword","item","oldUsers","newUsers","signupUser","checkUser","NotFound","from","alt","src","cliplist","clipshapes","userHabits","componentDidMount","prevState","renderNavbar","basename","exact","path","Date","parsedId","match","params","isNaN","store","createStore","applyMiddleware","next","result","getState","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.93ad231f.chunk.js","sourcesContent":["import moment, { Moment } from \"moment\";\nimport { Habit } from \"../models/habit\";\nimport { Streak } from \"../models/streak\";\n\nexport type StreakStatus = \"NO_STREAK\" | \"DISABLED_STREAK\" | \"ACTIVE_STREAK\";\n\nexport const NO_STREAK: StreakStatus = \"NO_STREAK\";\nexport const DISABLED_STREAK: StreakStatus = \"DISABLED_STREAK\";\nexport const ACTIVE_STREAK: StreakStatus = \"ACTIVE_STREAK\";\n\nexport const streakStatus = (\n  streak: Streak,\n  endDate: Moment,\n  now: Moment\n): StreakStatus => {\n  // If there is no streak then the habit has not yet begun\n  if (streak.length === 0) {\n    return NO_STREAK;\n  }\n\n  // If now is after the end date then the habit has already ended. If the\n  // habit has already ended then the entire streak should be disabled.\n  if (now.isAfter(endDate, \"days\")) {\n    return DISABLED_STREAK;\n  }\n\n  // Otherwise, the streak is non-empty and is active, so all days in the\n  // streak should be disabled except for the last one.\n  else {\n    return ACTIVE_STREAK;\n  }\n};\n\n// Given a habit, returns a new habit with a verified streak, updated if\n// necessary.\nexport const updateHabitStreak = (habit: Habit): Habit => {\n  const now = moment().startOf(\"day\");\n  let newStreak = updateStreak(\n    habit.startDate.startOf(\"day\"),\n    habit.endDate.startOf(\"day\"),\n    habit.streak,\n    now\n  );\n  return { ...habit, streak: newStreak };\n};\n\nexport const updateStreak = (\n  startDate: Moment,\n  endDate: Moment,\n  streak: Streak,\n  now: Moment\n): Streak => {\n  // We need to replace the old streak in case time has passed since the last\n  // \"user login\" occurred\n  let newStreak = streak;\n\n  // If the habit hasn't started yet, then the streak should be empty\n  if (startDate.isAfter(now, \"day\")) {\n    newStreak = [];\n  } else {\n    // figure out the correct streak length and current streak length\n    const currentLength = streak.length;\n    const correctLength = getStreakLength(now, startDate, endDate);\n\n    // figure out if the current streak length is too long, too short, or is correct\n    if (correctLength > currentLength) {\n      let streakDiff = correctLength - currentLength;\n      for (let i = 0; i < streakDiff; i++) {\n        newStreak.push(false);\n      }\n    } else if (correctLength < currentLength) {\n      newStreak = newStreak.slice(0, correctLength);\n    }\n  }\n\n  return newStreak;\n};\n\n// Given a date, will return number of days difference from that date and\n// today's date until it reached the end date (max difference)\nexport const getStreakLength = (\n  now: Moment,\n  startDate: Moment,\n  endDate: Moment\n): number => {\n  // check whether the end date is later or todays date is later and take\n  // the earlier of the two\n  if (startDate.isAfter(now, \"days\")) {\n    return 0;\n  } else if (endDate.isAfter(now, \"days\")) {\n    return now.diff(startDate, \"days\") + 1;\n  } else {\n    return endDate.diff(startDate, \"days\") + 1;\n  }\n};\n","import { User } from \"../models/user\";\n\nexport type LocalStorageKey = \"users\" | \"state\";\n\nexport const usersKey: LocalStorageKey = \"users\";\nexport const stateKey: LocalStorageKey = \"state\";\n\n// the index is a username and the value is a password\ntype UsersObject = { [index: string]: string };\n\n// A safe alternative to localStorage.getItem which should always be used\n// instead of that function\nexport const getLocalStorageItem = (key: LocalStorageKey): string | null => {\n  return window.localStorage.getItem(key);\n};\n\nexport const setLocalStorageItem = (\n  key: LocalStorageKey,\n  value: string\n): void => {\n  return window.localStorage.setItem(key, value);\n};\n\n// Insert a new user into local storage when they sign up\nexport const signupUser = (user: User): void => {\n  try {\n    const item = getLocalStorageItem(usersKey);\n    if (item) {\n      const oldUsers = JSON.parse(item);\n      const newUsers = insertUser(user, oldUsers);\n      setLocalStorageItem(usersKey, JSON.stringify(newUsers));\n    }\n  } catch {\n    console.log(\"Failed to add user due to encoding error\");\n  }\n};\n\n// Inserts a new user and password. Should not overwrite.\nexport const insertUser = (user: User, users: UsersObject): UsersObject => {\n  if (!users[user.username]) {\n    return { ...users, [user.username]: user.password };\n  } else {\n    return users;\n  }\n};\n\n// Updates an existing users. Should do nothing if the user\n// doesn't exist, but overwrites if the user does\nexport const updateUser = (user: User, users: UsersObject): UsersObject => {\n  if (users[user.username]) {\n    return { ...users, [user.username]: user.password };\n  } else {\n    return users;\n  }\n};\n\n// Check if a username and password combination exists in the users\n// when they try to log in\nexport const checkUser = (user: User, users: UsersObject): boolean => {\n  if (users[user.username] && users[user.username] === user.password) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport const findUsersKey = (): void => {\n  if (getLocalStorageItem(usersKey) === null) {\n    setLocalStorageItem(usersKey, JSON.stringify({}));\n  }\n};\n","import moment from \"moment\";\nimport { Middleware } from \"redux\";\nimport { AccountabilityPartner } from \"../models/habit\";\nimport { Streak } from \"../models/streak\";\nimport { removeKey } from \"../utils\";\nimport { updateHabitStreak } from \"../utils/streak\";\nimport {\n  getLocalStorageItem,\n  stateKey,\n  setLocalStorageItem,\n} from \"../utils/users\";\nimport {\n  ADD_HABIT,\n  EDIT_HABIT,\n  SET_STATE,\n  DELETE_HABIT,\n  UPDATE_STREAK,\n  UPDATE_CURRENT_USER,\n  REGISTER_USER,\n  State,\n  ActionTypes,\n  UserState,\n} from \"./types\";\n\nconst initialState: State = {\n  initialized: false, // false means the state hasn't been read from localstorage yet\n  currentUser: null, // Null means no one is logged in, a string identifies a username\n  userStates: {},\n};\n\n// Write redux state to local storage\nexport const writeStateMiddleware: Middleware<{}, State> = (store) => (\n  next\n) => (action: ActionTypes) => {\n  let result = next(action);\n  const { initialized, ...state } = store.getState();\n  setLocalStorageItem(stateKey, JSON.stringify(state));\n  return result;\n};\n\n// Retrieve Redux state from local storage\nexport const readState = (): State => {\n  try {\n    const stateJson = getLocalStorageItem(stateKey);\n    if (stateJson) {\n      // TODO: verify that stateJSON parsing succeeded and is of type StateJSON\n      const parsedState: StateJSON = JSON.parse(stateJson);\n      return decodeState(parsedState);\n    }\n  } catch (error) {\n    /* eslint-disable-next-line no-console */\n    console.error(\"Failed to read state from local storage\", error);\n    return initialState;\n  }\n  return initialState;\n};\n\n// Seperate reducer and reduce functions are given different default parameters for state.\nexport function reducer(state = initialState, action: ActionTypes) {\n  return reduce(state, action);\n}\n\n// Used to create the main and test reducers, but should not be\n// used on its own.\nexport const reduce = (state: State, action: ActionTypes) => {\n  switch (action.type) {\n    // Use to load the state from local storage when the application\n    // starts, but not to set individual habits\n    case SET_STATE: {\n      return action.payload;\n    }\n\n    case ADD_HABIT: {\n      const user = state.currentUser;\n\n      if (user) {\n        const userState = state.userStates[user];\n\n        const uid = userState.lastId + 1;\n        const newUserState = {\n          lastId: uid,\n          habits: { ...userState.habits, [uid]: action.payload },\n        };\n\n        const newState = {\n          ...state,\n          userStates: { ...state.userStates, [user]: newUserState },\n        };\n\n        return newState;\n      } else {\n        return state;\n      }\n    }\n\n    case EDIT_HABIT: {\n      const user = state.currentUser;\n\n      if (user) {\n        const habit = action.payload.habit;\n        const currentUserState = state.userStates[user];\n\n        const newUserState = {\n          ...currentUserState,\n          habits: {\n            ...currentUserState.habits,\n            [action.payload.id]: habit,\n          },\n        };\n\n        const newState = {\n          ...state,\n          userStates: { ...state.userStates, [user]: newUserState },\n        };\n\n        return newState;\n      } else {\n        return state;\n      }\n    }\n\n    case DELETE_HABIT: {\n      const user = state.currentUser;\n\n      if (user) {\n        const id = action.payload;\n        const currentUserState = state.userStates[user];\n\n        const newUserState = {\n          ...currentUserState,\n          habits: removeKey(currentUserState.habits, id),\n        };\n\n        const newState = {\n          ...state,\n          userStates: { ...state.userStates, [user]: newUserState },\n        };\n\n        return newState;\n      } else {\n        return state;\n      }\n    }\n\n    case UPDATE_STREAK: {\n      const user = state.currentUser;\n      if (user) {\n        let currentUserState = state.userStates[user];\n\n        const { id, check } = action.payload;\n        const habit = currentUserState.habits[id];\n\n        const streak = habit.streak;\n        streak[streak.length - 1] = check;\n\n        const newUserState = {\n          ...currentUserState,\n          habits: {\n            ...currentUserState.habits,\n            [id]: { ...habit, streak },\n          },\n        };\n\n        const newState = {\n          ...state,\n          userStates: { ...state.userStates, [user]: newUserState },\n        };\n\n        return newState;\n      } else {\n        return state;\n      }\n    }\n\n    case UPDATE_CURRENT_USER: {\n      const currentUser = action.payload;\n      const newState = {\n        ...state,\n        currentUser,\n      };\n\n      return newState;\n    }\n\n    case REGISTER_USER: {\n      const user = action.payload;\n      const habitObj = {\n        lastId: 0,\n        habits: {},\n      };\n\n      const newState = {\n        ...state,\n        userStates: { ...state.userStates, [user]: habitObj },\n      };\n\n      return newState;\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\ntype StateJSON = {\n  currentUser: string | null;\n  userStates: { [index: string]: UserStateJSON };\n};\n\ntype UserStateJSON = {\n  lastId: number;\n  habits: {\n    [index: string]: HabitJSON;\n  };\n};\n\ntype HabitJSON = {\n  startDate: string;\n  endDate: string;\n  title: string;\n  goal: string;\n  streak: Streak;\n  accountabilityPartner: AccountabilityPartner | null;\n};\n\n// Retrieve usable data for the app and redux\n// state. It takes a parsed JSON state object\n// and returns valid redux state.\nexport const decodeState = (parsedState: StateJSON): State => {\n  let userKeys = Object.keys(parsedState.userStates);\n\n  let decodedUserStates = userKeys.map((user) => {\n    let parsed = parsedState.userStates[user];\n    return { user, state: decodeUserState(parsed) };\n  });\n\n  let accumulatedUserState = decodedUserStates.reduce((acc, userState) => {\n    let { user, state } = userState;\n    return { ...acc, [user]: state };\n  }, {});\n\n  return {\n    currentUser: parsedState.currentUser,\n    initialized: true,\n    userStates: accumulatedUserState,\n  };\n};\n\n// This decodes an individual users state (habits).\n// Expects an object with a lastId and habits key.\nexport const decodeUserState = (stateJson: UserStateJSON): UserState => {\n  const ids = Object.keys(stateJson.habits);\n\n  // Create a new habits object by decoding the date fields for each\n  // habit properly\n  const decodedHabits = ids.reduce((acc, id) => {\n    const parsedHabit = stateJson.habits[id];\n\n    // The date fields have been parsed from strings but have not yet\n    // been parsed into moment date objects\n    const startDate = moment(parsedHabit.startDate.toString(), moment.ISO_8601);\n    const endDate = moment(parsedHabit.endDate.toString(), moment.ISO_8601);\n\n    // We have to verify that the streak is correct for the habit in\n    // the case that time has passed since the last page load\n    const newHabit = updateHabitStreak({\n      ...parsedHabit,\n      startDate,\n      endDate,\n    });\n\n    return { ...acc, [id]: newHabit };\n  }, {});\n\n  // Return the state with parsed habits\n  return { lastId: stateJson.lastId, habits: decodedHabits };\n};\n","import { Habit, HabitState } from \"../models/habit\";\nimport { Username } from \"../models/user\";\n\nexport interface State {\n  initialized: boolean;\n  currentUser: Username | null;\n  // the key is a Username\n  userStates: { [index: string]: UserState };\n}\n\nexport interface UserState {\n  lastId: number;\n  habits: HabitState;\n}\n\nexport const ADD_HABIT = \"ADD_HABIT\";\nexport const EDIT_HABIT = \"EDIT_HABIT\";\nexport const DELETE_HABIT = \"DELETE_HABIT\";\nexport const SET_STATE = \"SET_STATE\";\nexport const UPDATE_STREAK = \"UPDATE_STREAK\";\nexport const UPDATE_CURRENT_USER = \"UPDATE_CURRENT_USER\";\nexport const REGISTER_USER = \"REGISTER_USER\";\n\ninterface AddHabit {\n  type: typeof ADD_HABIT;\n  payload: Habit;\n}\n\ninterface EditHabit {\n  type: typeof EDIT_HABIT;\n  payload: {\n    id: number;\n    habit: Habit;\n  };\n}\n\ninterface DeleteHabit {\n  type: typeof DELETE_HABIT;\n  payload: number;\n}\n\ninterface SetState {\n  type: typeof SET_STATE;\n  payload: State;\n}\n\ninterface UpdateStreak {\n  type: typeof UPDATE_STREAK;\n  payload: {\n    id: number;\n    check: boolean;\n  };\n}\n\ninterface UpdateCurrentUser {\n  type: typeof UPDATE_CURRENT_USER;\n  payload: Username | null;\n}\n\ninterface RegisterUser {\n  type: typeof REGISTER_USER;\n  payload: Username;\n}\n\nexport type ActionTypes =\n  | AddHabit\n  | EditHabit\n  | DeleteHabit\n  | SetState\n  | UpdateStreak\n  | UpdateCurrentUser\n  | RegisterUser;\n","import { HabitState } from \"../models/habit\";\n\n// Produces an array of habit ids as strings.\nexport const getHabitIds = (habitsObj: HabitState): number[] => {\n  return habitsObj ? Object.keys(habitsObj).map(Number) : [];\n};\n\n// Removes a top-level key from an object, if it exists.\n// Immutable.\nexport function removeKey<T>(obj: { [index: number]: T }, key: number): {} {\n  let objectKeys = Object.keys(obj).map(Number);\n  let filteredKeys = objectKeys.filter((objectKey) => key !== objectKey);\n  return filteredKeys.reduce((accObj, objectKey) => {\n    return { ...accObj, [objectKey]: obj[objectKey] };\n  }, {});\n}\n","import React from \"react\";\n\ninterface Props {\n  disabled: boolean;\n}\n\nconst Checkbox: React.FC<Props> = (props) => {\n  return (\n    <label className=\"checkbox-label\">\n      {props.children}\n      {props.disabled ? (\n        <span className=\"checkbox-custom checkbox-disabled rectangular\"></span>\n      ) : (\n        <span className=\"checkbox-custom rectangular\"></span>\n      )}\n    </label>\n  );\n};\n\nexport default Checkbox;\n","import { Habit } from \"../models/habit\";\nimport { Username } from \"../models/user\";\nimport {\n  ActionTypes,\n  ADD_HABIT,\n  DELETE_HABIT,\n  EDIT_HABIT,\n  REGISTER_USER,\n  SET_STATE,\n  State,\n  UPDATE_CURRENT_USER,\n  UPDATE_STREAK,\n} from \"./types\";\n\nexport const addHabit = (habit: Habit): ActionTypes => {\n  return {\n    type: ADD_HABIT,\n    payload: habit,\n  };\n};\n\nexport const editHabit = (habit: Habit, id: number): ActionTypes => {\n  return {\n    type: EDIT_HABIT,\n    payload: {\n      id,\n      habit,\n    },\n  };\n};\n\nexport const deleteHabit = (id: number): ActionTypes => {\n  return {\n    type: DELETE_HABIT,\n    payload: id,\n  };\n};\n\nexport const setState = (state: State): ActionTypes => {\n  return {\n    type: SET_STATE,\n    payload: state,\n  };\n};\n\nexport const updateStreak = (id: number, check: boolean): ActionTypes => {\n  return {\n    type: UPDATE_STREAK,\n    payload: {\n      id,\n      check,\n    },\n  };\n};\n\nexport const updateCurrentUser = (username: Username | null): ActionTypes => {\n  return {\n    type: UPDATE_CURRENT_USER,\n    payload: username,\n  };\n};\n\nexport const registerUser = (username: string): ActionTypes => {\n  return {\n    type: REGISTER_USER,\n    payload: username,\n  };\n};\n","import React from \"react\";\nimport Checkbox from \"./Checkbox\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { updateStreak } from \"../store/actions\";\nimport { Link } from \"react-router-dom\";\nimport {\n  NO_STREAK,\n  DISABLED_STREAK,\n  ACTIVE_STREAK,\n  streakStatus,\n} from \"../utils/streak\";\nimport { deleteHabit } from \"../store/actions\";\nimport \"../css/main.css\";\nimport moment, { Moment } from \"moment\";\nimport { Habit } from \"../models/habit\";\nimport { Streak } from \"../models/streak\";\n\nconst connector = connect();\n\ntype OwnProps = {\n  id: number;\n  habit: Habit;\n  collapsed: boolean;\n};\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype Props = PropsFromRedux & OwnProps;\n\nclass HabitCard extends React.Component<Props> {\n  renderStreak(streak: Streak, endDate: Moment) {\n    const now = moment().startOf(\"day\");\n    const status = streakStatus(streak, endDate, now);\n\n    switch (status) {\n      case NO_STREAK:\n        return <div>This habit hasn't started yet!</div>;\n      case DISABLED_STREAK: {\n        return streak.map((check, index) => {\n          return (\n            <Checkbox key={index} disabled={true}>\n              <input type=\"checkbox\" disabled={true} checked={check} />\n            </Checkbox>\n          );\n        });\n      }\n      case ACTIVE_STREAK: {\n        const lastIndex = streak.length - 1;\n        return streak.map((check, index) => {\n          if (index === lastIndex) {\n            return (\n              <Checkbox disabled={false} key={index}>\n                <input\n                  type=\"checkbox\"\n                  onChange={(event) => this.handleStreakClick(event)}\n                  checked={check}\n                />\n              </Checkbox>\n            );\n          } else {\n            return (\n              <Checkbox disabled={true} key={index}>\n                <input type=\"checkbox\" disabled={true} checked={check} />\n              </Checkbox>\n            );\n          }\n        });\n      }\n      default: {\n        console.log(\"Oops! Something went wrong\");\n      }\n    }\n  }\n\n  handleStreakClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const id = this.props.id;\n    const check = event.target.checked;\n    this.props.dispatch(updateStreak(id, check));\n  };\n\n  handleDeleteClick = (event: React.MouseEvent, id: number) => {\n    event.preventDefault();\n    this.props.dispatch(deleteHabit(id));\n  };\n\n  renderExpanded(habit: Habit) {\n    const { title, goal, streak, startDate, endDate } = habit;\n    const { name, email } = habit.accountabilityPartner\n      ? habit.accountabilityPartner\n      : { name: \"\", email: \"\" };\n\n    const endDateToString = endDate ? endDate.format(\"MMMM Do, YYYY\") : null;\n    const startDateToString = startDate\n      ? startDate.format(\"MMMM Do, YYYY\")\n      : null;\n\n    return (\n      <div className=\"section\">\n        <div className=\"card card-border\">\n          <header className=\"card-header card-element-background\">\n            <p className=\"card-header-title header-font\">{title}</p>\n          </header>\n          <div className=\"card-content\">\n            <div className=\"content flex-item\">\n              <div className=\"flex-element\">\n                <h3>Goal</h3>\n                <p>{goal}</p>\n              </div>\n              <div className=\"flex-element\">\n                <h3>Accountability Partner</h3>\n                <p>name: {name}</p>\n                <p>email: {email}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"card-content\">\n            <div className=\"content\">\n              {startDateToString} - {endDateToString}\n            </div>\n          </div>\n          <div className=\"card-content\">\n            <div className=\"content streak\">\n              {this.renderStreak(streak, endDate)}\n            </div>\n          </div>\n          <footer className=\"card-footer card-element-background\">\n            <Link\n              className=\"card-footer-item is-dark\"\n              to={`/${this.props.id}/edit`}\n            >\n              <strong>Edit</strong>\n            </Link>\n            <a\n              href=\"/\"\n              className=\"card-footer-item is-dark\"\n              onClick={(event) => {\n                this.handleDeleteClick(event, this.props.id);\n              }}\n            >\n              <strong>Delete</strong>\n            </a>\n          </footer>\n        </div>\n      </div>\n    );\n  }\n\n  renderCollapsed = (habit: Habit) => {\n    const { streak: oldStreak, title, endDate } = habit;\n\n    let newStreak = oldStreak;\n\n    if (newStreak.length >= 7) {\n      const startOfWeek = newStreak.length - 7;\n      const endOfWeek = newStreak.length;\n      newStreak = newStreak.slice(startOfWeek, endOfWeek);\n    }\n\n    return (\n      <div>\n        <div className=\"compact-card\">\n          <div className=\"compact-card-header\">{title}</div>\n          <div>{this.renderStreak(newStreak, endDate)}</div>\n        </div>\n      </div>\n    );\n  };\n\n  render = () => {\n    const { collapsed, habit } = this.props;\n    if (habit) {\n      return collapsed\n        ? this.renderCollapsed(habit)\n        : this.renderExpanded(habit);\n    } else {\n      return \"\";\n    }\n  };\n}\n\nexport default connector(HabitCard);\n","import React from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport HabitCard from \"./HabitCard\";\nimport { State } from \"../store/types\";\n\nconst mapState = (state: State) => {\n  const user = state.currentUser;\n  return user ? { habits: state.userStates[user].habits } : { habits: [] };\n};\n\nconst connector = connect(mapState);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype Props = PropsFromRedux & {\n  collapsed: boolean;\n};\n\nclass Home extends React.Component<Props> {\n  habitList = () => {\n    return Object.keys(this.props.habits).map((id) => {\n      return (\n        <div key={id}>\n          <HabitCard\n            collapsed={this.props.collapsed}\n            habit={this.props.habits[+id]}\n            id={+id}\n          />\n        </div>\n      );\n    });\n  };\n\n  renderEmpty = () => {\n    return (\n      <div className=\"hero\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <h1 className=\"title\">Create a New Habit!</h1>\n            <div></div>\n            <Link to=\"/new\" className=\"subtitle button banner-button\">\n              Get to it\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  render = () => {\n    if (Object.keys(this.props.habits).length === 0) {\n      return <div className=\"container\">{this.renderEmpty()}</div>;\n    } else {\n      return <div className=\"container\">{this.habitList()}</div>;\n    }\n  };\n}\n\nexport default connector(Home);\n","import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport useForm from \"react-hook-form\";\nimport DatePicker from \"react-datepicker\";\nimport { editHabit, addHabit } from \"../store/actions\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { updateHabitStreak } from \"../utils/streak\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { Habit } from \"../models/habit\";\n\nconst connector = connect();\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype OwnProps = RouteComponentProps & {\n  id?: number;\n  habit?: Habit;\n  now: Date;\n};\n\ntype Props = PropsFromRedux & OwnProps;\n\ntype FormData = {\n  title: string;\n  goal: string;\n  startDate: Date;\n  endDate: Date;\n  accountabilityPartner: {\n    name: string;\n    email: string;\n  };\n};\n\nconst HabitForm: React.FC<Props> = (props) => {\n  const [state, setState] = useState({\n    startDate: props.now,\n    endDate: props.now,\n  });\n  const { register, handleSubmit, setValue, errors } = useForm<FormData>();\n\n  React.useEffect(() => {\n    register({ name: \"startDate\" });\n    register({ name: \"endDate\" });\n  }, [register, setValue]);\n\n  React.useEffect(() => {\n    if (props.habit) {\n      const startDate = props.habit.startDate.toDate();\n      const endDate = props.habit.endDate.toDate();\n      setValue(\"startDate\", startDate);\n      setValue(\"endDate\", endDate);\n      setState({ startDate, endDate });\n    } else {\n      setValue(\"startDate\", props.now);\n      setValue(\"endDate\", props.now);\n    }\n  }, [setValue, props]);\n\n  const handleDatePickerChange = (key: string, date: Date) => {\n    if (key === \"startDate\" && date > state.endDate) {\n      setValue(\"startDate\", date);\n      setValue(\"endDate\", date);\n      setState({ startDate: date, endDate: date });\n    } else {\n      setValue(key, date);\n      setState({ ...state, [key]: date });\n    }\n  };\n\n  const onSubmit = (data: FormData) => {\n    if (props.habit) {\n      const id = props.id;\n      const startDate = moment(data.startDate);\n      const endDate = moment(data.endDate);\n      const habit = updateHabitStreak({\n        ...props.habit,\n        ...data,\n        startDate,\n        endDate,\n      });\n      if (id) {\n        props.dispatch(editHabit(habit, id));\n      }\n    } else {\n      const startDate = moment(data.startDate);\n      const endDate = moment(data.endDate);\n      const habit = updateHabitStreak({\n        ...data,\n        startDate,\n        endDate,\n        streak: [],\n      });\n      props.dispatch(addHabit(habit));\n    }\n    props.history.push(\"/home\");\n  };\n\n  return (\n    <form className=\"form-container\" onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"field\">\n        <label className=\"label is-large\">Habit</label>\n        <div className=\"control\">\n          <input\n            className=\"input\"\n            type=\"text\"\n            name=\"title\"\n            defaultValue={props.habit ? props.habit.title : \"\"}\n            placeholder=\"Your new habit.\"\n            ref={register({ required: true })}\n          />\n        </div>\n        {errors.title && (\n          <p className=\"help is-danger\">\"A title is required\"</p>\n        )}\n      </div>\n      <div className=\"field\">\n        <label className=\"label\">Goal</label>\n        <div className=\"control\">\n          <textarea\n            className=\"textarea\"\n            name=\"goal\"\n            defaultValue={props.habit ? props.habit.goal : \"\"}\n            placeholder=\"What is your goal?\"\n            ref={register}\n          />\n        </div>\n      </div>\n      <div className=\"field is-grouped is-horizontal\">\n        <div className=\"field-body\">\n          <div className=\"field\">\n            <label className=\"label\">Start Date</label>\n            <div className=\"control\">\n              <DatePicker\n                minDate={props.now}\n                selected={state.startDate}\n                onChange={(date: Date) => {\n                  handleDatePickerChange(\"startDate\", date);\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">End Date</label>\n            <div className=\"control\">\n              <DatePicker\n                minDate={state.startDate}\n                selected={state.endDate}\n                onChange={(date: Date) => {\n                  handleDatePickerChange(\"endDate\", date);\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <h3 className=\"label is-large margin-top\">Accountability Partner</h3>\n      <div className=\"field\">\n        <label className=\"label\">Name</label>\n        <div className=\"control\">\n          <input\n            className=\"input\"\n            type=\"text\"\n            name=\"accountabilityPartner.name\"\n            defaultValue={\n              props.habit?.accountabilityPartner\n                ? props.habit.accountabilityPartner.name\n                : \"\"\n            }\n            placeholder=\"Your accountability partner's name\"\n            ref={register({\n              maxLength: { value: 40, message: \"This name is too long\" },\n            })}\n          />\n        </div>\n        <p className=\"help is-danger\">\n          {errors[\"accountabilityPartner.name\"] ? (\n            <span>{errors[\"accountabilityPartner.name\"].message}</span>\n          ) : (\n            \"\"\n          )}\n        </p>\n      </div>\n      <div className=\"field\">\n        <label className=\"label\">Email</label>\n        <div className=\"control\">\n          <input\n            className=\"input\"\n            type=\"text\"\n            name=\"accountabilityPartner.email\"\n            defaultValue={\n              props.habit?.accountabilityPartner\n                ? props.habit.accountabilityPartner.email\n                : \"\"\n            }\n            placeholder=\"Their email\"\n            ref={register({\n              pattern: {\n                value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n                message: \"Please enter a valid email\",\n              },\n            })}\n          />\n        </div>\n        <p className=\"help is-danger\">\n          {errors[\"accountabilityPartner.email\"] ? (\n            <span>{errors[\"accountabilityPartner.email\"].message}</span>\n          ) : (\n            \"\"\n          )}\n        </p>\n      </div>\n      <div className=\"control margin-top\">\n        <button className=\"button is-link\">Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default connector(HabitForm);\n","import React from \"react\";\nimport { Link, withRouter, RouteComponentProps } from \"react-router-dom\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { updateCurrentUser } from \"../store/actions\";\nimport { getHabitIds } from \"../utils\";\nimport { State } from \"../store/types\";\n\nconst mapState = (state: State) => {\n  const user = state.currentUser;\n  if (user) {\n    return {\n      habitIds: getHabitIds(state.userStates[user].habits),\n    };\n  } else {\n    return {\n      habitIds: [],\n    };\n  }\n};\n\nconst connector = connect(mapState);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype OwnProps = {\n  collapsed: boolean;\n  toggleCollapse: (event: React.MouseEvent) => void;\n};\n\ntype Props = PropsFromRedux & RouteComponentProps & OwnProps;\n\nclass NavBar extends React.Component<Props> {\n  buttonLabel = () => {\n    if (this.props.collapsed) {\n      return <strong>Expand View</strong>;\n    } else {\n      return <strong>Collapse View</strong>;\n    }\n  };\n\n  handleLogout = () => {\n    let username = null;\n    this.props.dispatch(updateCurrentUser(username));\n    this.props.history.push(\"/\");\n  };\n\n  render = () => {\n    const showView =\n      this.props.location.pathname === \"/home\" &&\n      this.props.habitIds.length > 0;\n    return (\n      <nav className=\"navbar has-shadow\">\n        <div className=\"navbar-brand\">\n          <Link to=\"/\" className=\"navbar-item\">\n            <strong>HabitTracker</strong>\n          </Link>\n        </div>\n        <div className=\"navbar-end\">\n          <div className=\"navbar-item\">\n            <div className=\"buttons\">\n              <Link to=\"/new\" className=\"button is-light\">\n                <strong>New Habit</strong>\n              </Link>\n              {showView && (\n                <div\n                  onClick={(event) => this.props.toggleCollapse(event)}\n                  className=\"button is-light\"\n                >\n                  {this.buttonLabel()}\n                </div>\n              )}\n              <button\n                onClick={() => this.handleLogout()}\n                className=\"button is-light\"\n              >\n                <strong>Logout</strong>\n              </button>\n            </div>\n          </div>\n        </div>\n      </nav>\n    );\n  };\n}\n\nconst ConnectedNavBar = connector(NavBar);\n\nexport default withRouter(ConnectedNavBar);\n","import React from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport useForm from \"react-hook-form\";\nimport { updateCurrentUser, registerUser } from \"../store/actions\";\nimport { usersKey, signupUser, getLocalStorageItem } from \"../utils/users\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\nconst connector = connect();\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype OwnProps = RouteComponentProps;\n\ntype Props = PropsFromRedux & OwnProps;\n\ntype FormData = {\n  username: string;\n  password: string;\n  verifypassword: string;\n};\n\nconst SignupForm: React.FC<Props> = (props) => {\n  const { register, handleSubmit, errors, setError } = useForm<FormData>();\n\n  const onSubmit = (data: FormData) => {\n    const usersFromLocalStorage = getLocalStorageItem(usersKey);\n\n    if (usersFromLocalStorage) {\n      const users = JSON.parse(usersFromLocalStorage);\n\n      if (users[data.username]) {\n        setError(\"username\", \"invalid\", \"Username is not available\");\n      } else if (data.password !== data.verifypassword) {\n        setError(\"password\", \"notMatch\", \"Passwords must match.\");\n        setError(\"password\", \"notMatch\", \"Passwords must match.\");\n      } else {\n        let user = {\n          username: data.username,\n          password: data.password,\n        };\n\n        signupUser(user);\n\n        props.dispatch(registerUser(user.username));\n        props.dispatch(updateCurrentUser(user.username));\n        props.history.push(\"/home\");\n      }\n    }\n  };\n\n  return (\n    <form className=\"form-container\" onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"field\">\n        <label className=\"label is-large\">Username</label>\n        <div className=\"control\">\n          <input\n            className=\"input\"\n            type=\"text\"\n            name=\"username\"\n            placeholder=\"Your username here\"\n            ref={register({\n              required: \"A username is required\",\n            })}\n          />\n        </div>\n        {errors.username && (\n          <p className=\"help is-danger\">{errors.username.message}</p>\n        )}\n      </div>\n      <div className=\"field\">\n        <label className=\"label is-large\">Password</label>\n        <div className=\"control\">\n          <input\n            className=\"input\"\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Your password here\"\n            ref={register({\n              required: \"A password is required\",\n            })}\n          />\n        </div>\n        {errors.password && (\n          <p className=\"help is-danger\">{errors.password.message}</p>\n        )}\n      </div>\n      <div className=\"field\">\n        <label className=\"label is-large\">Password</label>\n        <div className=\"control\">\n          <input\n            className=\"input\"\n            type=\"password\"\n            name=\"verifypassword\"\n            placeholder=\"Your password here\"\n            ref={register({\n              required: \"A password is required\",\n            })}\n          />\n        </div>\n        {errors.password && (\n          <p className=\"help is-danger\">{errors.password.message}</p>\n        )}\n      </div>\n      <div className=\"control margin-top\">\n        <button type=\"submit\" className=\"button is-link\">\n          Sign Up\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default connector(SignupForm);\n","import React from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport useForm from \"react-hook-form\";\nimport { Redirect, RouteComponentProps } from \"react-router-dom\";\nimport { updateCurrentUser } from \"../store/actions\";\nimport { usersKey, getLocalStorageItem, checkUser } from \"../utils/users\";\nimport { State } from \"../store/types\";\n\nconst mapState = (state: State) => {\n  return {\n    currentUser: state.currentUser,\n  };\n};\n\nconst connector = connect(mapState);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype OwnProps = RouteComponentProps;\n\ntype Props = PropsFromRedux & OwnProps;\n\ntype FormData = {\n  username: string;\n  password: string;\n};\n\nconst LoginForm: React.FC<Props> = ({ currentUser, ...props }) => {\n  const { register, handleSubmit, errors, setError } = useForm<FormData>();\n\n  const onSubmit = (data: FormData) => {\n    const usersFromLocalStorage = getLocalStorageItem(usersKey);\n    if (usersFromLocalStorage) {\n      const users = JSON.parse(usersFromLocalStorage);\n\n      if (checkUser(data, users)) {\n        props.dispatch(updateCurrentUser(data.username));\n        props.history.push(\"/home\");\n      } else {\n        setError(\"username\", \"notMatch\", \"invalid username\");\n        setError(\"password\", \"notMatch\", \"invalid password\");\n      }\n    }\n  };\n\n  const renderForm = () => {\n    return (\n      <form className=\"form-container\" onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"field\">\n          <label className=\"label is-large\">Username</label>\n          <div className=\"control\">\n            <input\n              className=\"input\"\n              type=\"text\"\n              name=\"username\"\n              placeholder=\"Your username here\"\n              ref={register({\n                required: \"A username is required\",\n              })}\n            />\n          </div>\n          {errors.username && (\n            <p className=\"help is-danger\">{errors.username.message}</p>\n          )}\n        </div>\n        <div className=\"field\">\n          <label className=\"label is-large\">Password</label>\n          <div className=\"control\">\n            <input\n              className=\"input\"\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Your password here\"\n              ref={register({\n                required: \"A password is required\",\n              })}\n            />\n          </div>\n          {errors.password && (\n            <p className=\"help is-danger\">{errors.password.message}</p>\n          )}\n        </div>\n        <div className=\"login-buttons\">\n          <div className=\"control margin-top\">\n            <button type=\"submit\" className=\"button is-link\">\n              Sign In\n            </button>\n          </div>\n        </div>\n      </form>\n    );\n  };\n  return currentUser ? <Redirect to={{ pathname: \"/home\" }} /> : renderForm();\n};\n\nexport default connector(LoginForm);\n","import React from \"react\";\n\nconst NotFound = () => {\n  return <span>Not Found</span>;\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport { Route, Redirect, RouteComponentProps } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Username } from \"../models/user\";\nimport { State } from \"../store/types\";\n\ninterface PrivateRouteProps {\n  currentUser: Username | null;\n  initialized: boolean;\n  render: (props: RouteComponentProps<any>) => React.ReactNode;\n  [index: string]: any;\n}\n\n// A wrapper component for a Route which makes sure you are logged\n// in to view its contents\nconst PrivateRoute: React.FC<PrivateRouteProps> = ({\n  currentUser,\n  initialized,\n  render,\n  ...props\n}) => {\n  if (initialized) {\n    if (currentUser) {\n      return <Route {...props} render={render} />;\n    } else {\n      return (\n        <Route\n          {...props}\n          render={({ location }) => (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: location },\n              }}\n            />\n          )}\n        />\n      );\n    }\n  } else {\n    // App is still loading from local storage\n    return <div>Loading...</div>;\n  }\n};\n\nconst mapState = (state: State) => {\n  return {\n    currentUser: state.currentUser,\n    initialized: state.initialized,\n  };\n};\n\nexport default connect(mapState)(PrivateRoute);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport cliplist from \"../images/cliplist.png\";\nimport clipshapes from \"../images/clipshapes.png\";\nimport { Username } from \"../models/user\";\nimport { State } from \"../store/types\";\n\ninterface LandingPageProps {\n  currentUser: Username | null;\n}\n\nconst LandingPage: React.FC<LandingPageProps> = (props) => {\n  const nav = () => {\n    return (\n      <nav className=\"navbar navbar-guest\">\n        <div className=\"navbar-brand\">\n          <strong className=\"navbar-item navbar-item-logo\">HabitTracker</strong>\n        </div>\n        <div className=\"navbar-end\">\n          <div className=\"navbar-item\">\n            <Link to=\"/login\">\n              <strong>Sign In</strong>\n            </Link>\n          </div>\n        </div>\n      </nav>\n    );\n  };\n\n  const hero = () => {\n    return (\n      <section className=\"hero has-background-white\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <div className=\"columns\">\n              <div className=\"column is-6\">\n                <h1 className=\"title is-1 ht-title has-text-left\">\n                  Finally, habits that <em>actually</em> work.\n                </h1>\n                <h2 className=\"subtitle ht-subtitle has-text-left\">\n                  Stick to your habits and resolutions using technology built on\n                  psychological principles while keeping your data 100% private.\n                </h2>\n                <Link to=\"/signup\" className=\"button is-medium is-primary\">\n                  <strong>Get started for free</strong>\n                </Link>\n                <span className=\"help\">\n                  Add as many habits as you want, it's always free.\n                </span>\n              </div>\n              <div className=\"column is-6\">\n                <img alt=\"Woman with empty clipboard\" src={cliplist} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  };\n\n  const heroPrimary = () => {\n    return (\n      <section className=\"hero is-secondary is-bold\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <div className=\"columns\">\n              <div className=\"column is-6\">\n                <img alt=\"woman with shapes\" src={clipshapes} />\n              </div>\n              <div className=\"column is-5\">\n                <p className=\"ht-prop-title\">\n                  Have you ever failed to stick to your habits or resolutions?\n                </p>\n                <p className=\"ht-prop-subtitle\">\n                  HabitTracker helps you succeed in your goals with\n                  tried-and-true psychological principles. Whether you need to\n                  create a new good habit or break a bad old one, HabitTracker\n                  can help.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  };\n\n  const howItWorks = () => {\n    return (\n      <section className=\"hero has-background-white\">\n        <div className=\"hero-body\">\n          <h1 className=\"title how-it-works-title\">How it works</h1>\n          <div className=\"container\">\n            <div className=\"columns is-centered\">\n              <div className=\"column has-text-centered is-4\">\n                <i className=\"far fa-check-square fa-5x\"></i>\n                <p className=\"ht-prop-subtitle\">\n                  Add all of the habits you want to make or break and check them\n                  off by day as you complete them.\n                </p>\n              </div>\n              <div className=\"column has-text-centered is-4\">\n                <i className=\"far fa-clock fa-5x\"></i>\n                <p className=\"ht-prop-subtitle\">\n                  Watch your progress with the streaks feature that shows you\n                  how many days in a row you've completed your habit.\n                </p>\n              </div>\n              <div className=\"column has-text-centered is-4\">\n                <i className=\"far fa-bell fa-5x\"></i>\n                <p className=\"ht-prop-subtitle\">\n                  Stay on track with an accountability partner who will be\n                  alerted via email if you miss a habit three days in a row.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  };\n\n  const footer = () => {\n    return (\n      <section className=\"hero is-secondary is-bold\">\n        <div className=\"hero-body\">\n          <div className=\"container has-text-centered\">\n            <p className=\"footer-title\">Try HabitTracker today for free</p>\n            <Link to=\"/signup\" className=\"button is-medium is-primary\">\n              <strong>Get started</strong>\n            </Link>\n          </div>\n        </div>\n      </section>\n    );\n  };\n\n  const renderLanding = () => {\n    return (\n      <>\n        {nav()}\n        {hero()}\n        {heroPrimary()}\n        {howItWorks()}\n        {footer()}\n      </>\n    );\n  };\n\n  return props.currentUser === null ? (\n    renderLanding()\n  ) : (\n    <Redirect to={{ pathname: \"/home\" }} />\n  );\n};\n\nconst mapState = (state: State) => {\n  return {\n    currentUser: state.currentUser,\n  };\n};\n\nexport default connect(mapState)(LandingPage);\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  RouteComponentProps,\n} from \"react-router-dom\";\nimport Home from \"./Home\";\nimport HabitForm from \"./HabitForm\";\nimport HabitCard from \"./HabitCard\";\nimport NavBar from \"./NavBar\";\nimport SignupForm from \"./SignupForm\";\nimport LoginForm from \"./LoginForm\";\nimport NotFound from \"./NotFound\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { setState } from \"../store/actions\";\nimport { readState } from \"../store/reducers\";\nimport \"../css/main.css\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport { findUsersKey } from \"../utils/users\";\nimport LandingPage from \"./LandingPage\";\nimport { State } from \"../store/types\";\n\nconst mapState = (state: State) => {\n  const user = state.currentUser;\n\n  return {\n    currentUser: user,\n    userHabits: user ? state.userStates[user].habits : {},\n  };\n};\n\nconst connector = connect(mapState);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype Props = PropsFromRedux;\n\ntype MyState = {\n  collapsed: boolean;\n};\n\nclass App extends React.Component<Props, MyState> {\n  state: MyState = {\n    collapsed: false,\n  };\n\n  componentDidMount = () => {\n    findUsersKey();\n    let state = readState();\n    this.props.dispatch(setState({ ...state, initialized: true }));\n  };\n\n  toggleCollapse = (event: React.MouseEvent) => {\n    event.preventDefault();\n    this.setState((prevState) => ({\n      collapsed: !prevState.collapsed,\n    }));\n  };\n\n  renderNavbar = () => {\n    return (\n      <NavBar\n        collapsed={this.state.collapsed}\n        toggleCollapse={this.toggleCollapse}\n      />\n    );\n  };\n\n  render = () => {\n    return (\n      <Router basename=\"/habit-tracker\">\n        {this.props.currentUser ? this.renderNavbar() : \"\"}\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={(props) => <LandingPage {...props} />}\n          />\n          <Route path=\"/login\" render={(props) => <LoginForm {...props} />} />\n          <Route path=\"/signup\" render={(props) => <SignupForm {...props} />} />\n          <PrivateRoute\n            path=\"/home\"\n            render={(props: RouteComponentProps) => (\n              <Home {...props} collapsed={this.state.collapsed} />\n            )}\n          />\n          <PrivateRoute\n            path=\"/new\"\n            render={(props: RouteComponentProps) => (\n              <HabitForm {...props} now={new Date()} />\n            )}\n          />\n          <PrivateRoute\n            path=\"/:id/edit\"\n            render={(props: RouteComponentProps<{ id: string }>) => {\n              const parsedId = +props.match.params.id;\n              const habit = !isNaN(parsedId)\n                ? this.props.userHabits[parsedId]\n                : null;\n              if (habit) {\n                return (\n                  <HabitForm\n                    {...props}\n                    now={new Date()}\n                    id={parsedId}\n                    habit={habit}\n                  />\n                );\n              } else {\n                return <NotFound />;\n              }\n            }}\n          />\n          <PrivateRoute\n            path=\"/:id/show\"\n            render={(props: RouteComponentProps<{ id: string }>) => {\n              const parsedId = +props.match.params.id;\n              const habit = !isNaN(parsedId)\n                ? this.props.userHabits[parsedId]\n                : null;\n              if (habit) {\n                return (\n                  <HabitCard id={parsedId} habit={habit} collapsed={false} />\n                );\n              } else {\n                return <NotFound />;\n              }\n            }}\n          />\n        </Switch>\n      </Router>\n    );\n  };\n}\n\nexport default connector(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { reducer, writeStateMiddleware } from \"./store/reducers\";\nimport App from \"./components/App\";\n\nconst store = createStore(reducer, applyMiddleware(writeStateMiddleware));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/cliplist.0b2906ab.png\";","module.exports = __webpack_public_path__ + \"static/media/clipshapes.148cdd9b.png\";"],"sourceRoot":""}