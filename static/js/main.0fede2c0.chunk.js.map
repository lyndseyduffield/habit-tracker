{"version":3,"sources":["utils/index.js","utils/streak.js","actions/index.js","reducers/index.js","components/Checkbox.js","components/HabitCard.js","components/Home.js","components/Form.js","components/NavBar.js","utils/users.js","components/SignupForm.js","components/LoginForm.js","components/PrivateRoute.js","components/LandingPage.js","components/App.js","index.js","images/cliplist.png","images/clipshapes.png"],"names":["getHabitIds","habitsObj","Object","keys","updateHabitStreak","habit","now","moment","startOf","newStreak","updateStreak","startDate","endDate","streak","isAfter","currentLength","length","correctLength","getStreakLength","streakDiff","i","push","slice","diff","deleteHabit","id","type","value","check","updateCurrentUser","username","initialState","initialized","currentUser","userStates","reduce","state","action","user","userState","uid","lastId","newUserState","habits","currentUserState","obj","key","filter","objectKey","accObj","decodeState","parsedState","accumulatedUserState","map","decodeUserState","acc","stateJson","decodedHabits","parsedHabit","ISO_8601","newHabit","Checkbox","props","class","children","disabled","HabitCard","handleStreakClick","event","match","params","target","checked","dispatch","handleDeleteClick","preventDefault","streakStatus","index","lastIndex","onChange","console","log","this","title","goal","accountabilityPartner","name","email","endDateToString","format","startDateToString","renderStreak","to","href","onClick","oldStreak","startOfWeek","endOfWeek","collapsed","renderCollapsed","renderExpanded","React","Component","connect","ownProps","Home","renderEmpty","habitIds","habitList","useState","setState","useForm","register","handleSubmit","setValue","errors","useEffect","toDate","handleDatePickerChange","date","onSubmit","data","editHabit","addHabit","history","defaultValue","placeholder","ref","required","minDate","selected","maxLength","message","pattern","NavBar","buttonLabel","handleLogout","showView","location","pathname","toggleCollapse","ConnectedNavBar","withRouter","insertUser","users","password","setError","JSON","parse","window","localStorage","getItem","verifypassword","oldUsers","newUsers","setItem","stringify","signupUser","checkUser","render","from","alt","src","cliplist","clipshapes","App","prevState","renderNavbar","readState","basename","exact","path","Date","component","store","createStore","applyMiddleware","next","result","getState","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.0fede2c0.chunk.js","sourcesContent":["// Expects an object with numeric keys where each key\n// is the id of a particular habit. Produces an array\n// of habit ids as strings.\nexport const getHabitIds = habitsObj => {\n  return habitsObj ? Object.keys(habitsObj) : [];\n};\n\n// Removes a top-level key from an object, if it exists.\n// Immutable.\nexport function removeKey(obj, key) {\n  let objectKeys = Object.keys(obj);\n  let filteredKeys = objectKeys.filter(objectKey => key !== objectKey);\n  return filteredKeys.reduce((accObj, objectKey) => {\n    return { ...accObj, [objectKey]: obj[objectKey] };\n  }, {});\n}\n","import moment from \"moment\";\n\nexport const NO_STREAK = \"NO_STREAK\";\nexport const DISABLED_STREAK = \"DISABLED_STREAK\";\nexport const ACTIVE_STREAK = \"ACTIVE_STREAK\";\n\nexport const streakStatus = (streak, endDate, now) => {\n  // If there is no streak then the habit has not yet begun\n  if (streak.length === 0) {\n    return NO_STREAK;\n  }\n\n  // If now is after the end date then the habit has already ended. If the\n  // habit has already ended then the entire streak should be disabled.\n  if (now.isAfter(endDate, \"days\")) {\n    return DISABLED_STREAK;\n  }\n\n  // Otherwise, the streak is non-empty and is active, so all days in the\n  // streak should be disabled except for the last one.\n  else {\n    return ACTIVE_STREAK;\n  }\n};\n\n// Given a habit, returns a new habit with a verified streak, updated if\n// necessary.\nexport const updateHabitStreak = habit => {\n  const now = moment().startOf(\"day\");\n  let newStreak = updateStreak(\n    habit.startDate.startOf(\"day\"),\n    habit.endDate.startOf(\"day\"),\n    habit.streak,\n    now\n  );\n  return { ...habit, streak: newStreak };\n};\n\nexport const updateStreak = (startDate, endDate, streak, now) => {\n  // We need to replace the old streak in case time has passed since the last\n  // \"user login\" occurred\n  let newStreak = streak;\n\n  // If the habit hasn't started yet, then the streak should be empty\n  if (startDate.isAfter(now, \"day\")) {\n    newStreak = [];\n  } else {\n    // figure out the correct streak length and current streak length\n    const currentLength = streak.length;\n    const correctLength = getStreakLength(now, startDate, endDate);\n\n    // figure out if the current streak length is too long, too short, or is correct\n    if (correctLength > currentLength) {\n      let streakDiff = correctLength - currentLength;\n      for (let i = 0; i < streakDiff; i++) {\n        newStreak.push(false);\n      }\n    } else if (correctLength < currentLength) {\n      newStreak = newStreak.slice(0, correctLength);\n    }\n  }\n\n  return newStreak;\n};\n\n// Given a date, will return number of days difference from that date and\n// today's date until it reached the end date (max difference)\nexport const getStreakLength = (now, startDate, endDate) => {\n  // check whether the end date is later or todays date is later and take\n  // the earlier of the two\n  if (startDate.isAfter(now, \"days\")) {\n    return 0;\n  } else if (endDate.isAfter(now, \"days\")) {\n    return now.diff(startDate, \"days\") + 1;\n  } else {\n    return endDate.diff(startDate, \"days\") + 1;\n  }\n};\n","export const ADD_HABIT = \"ADD_HABIT\";\nexport const EDIT_HABIT = \"EDIT_HABIT\";\nexport const DELETE_HABIT = \"DELETE_HABIT\";\nexport const SET_STATE = \"SET_STATE\";\nexport const UPDATE_STREAK = \"UPDATE_STREAK\";\nexport const UPDATE_CURRENT_USER = \"UPDATE_CURRENT_USER\";\nexport const REGISTER_USER = \"REGISTER_USER\";\n\nexport const addHabit = habit => {\n  const action = {\n    type: ADD_HABIT,\n    value: habit\n  };\n  return action;\n};\n\nexport const editHabit = (habit, id) => {\n  const action = {\n    type: EDIT_HABIT,\n    value: {\n      id,\n      habit\n    }\n  };\n  return action;\n};\n\nexport const deleteHabit = id => {\n  const action = {\n    type: DELETE_HABIT,\n    value: id\n  };\n  return action;\n};\n\nexport const setState = state => {\n  const action = {\n    type: SET_STATE,\n    value: state\n  };\n  return action;\n};\n\nexport const updateStreak = (id, check) => {\n  const action = {\n    type: UPDATE_STREAK,\n    value: {\n      id,\n      check\n    }\n  };\n  return action;\n};\n\nexport const updateCurrentUser = username => {\n  const action = {\n    type: UPDATE_CURRENT_USER,\n    value: username\n  };\n  return action;\n};\n\nexport const registerUser = username => {\n  const action = {\n    type: REGISTER_USER,\n    value: username\n  };\n  return action;\n};\n","import moment from \"moment\";\nimport { removeKey } from \"../utils\";\nimport { updateHabitStreak } from \"../utils/streak\";\nimport {\n  ADD_HABIT,\n  EDIT_HABIT,\n  SET_STATE,\n  DELETE_HABIT,\n  UPDATE_STREAK,\n  UPDATE_CURRENT_USER,\n  REGISTER_USER\n} from \"../actions\";\n\nconst initialState = {\n  initialized: false, // false means the state hasn't been read from localstorage yet\n  currentUser: null, // Null means no one is logged in, a string identifies a username\n  userStates: {}\n};\n\nconst STATE_KEY = \"state\";\n\n// Write redux state to local storage\nexport const writeStateMiddleware = store => next => action => {\n  let result = next(action);\n  const { initialized, ...state } = store.getState();\n  window.localStorage.setItem(STATE_KEY, JSON.stringify(state));\n  return result;\n};\n\n// Retrieve Redux state from local storage\nexport const readState = () => {\n  try {\n    const stateJson = window.localStorage.getItem(STATE_KEY);\n    const parsedState = JSON.parse(stateJson);\n    return decodeState(parsedState);\n  } catch {\n    /* eslint-disable-next-line no-console */\n    console.log(\"Failed to read state from local storage\");\n    return initialState;\n  }\n};\n\nexport function reducer(state = initialState, action) {\n  return reduce(state, action);\n}\n\n// Used to create the main and test reducers, but should not be\n// used on its own.\nexport function reduce(state, action) {\n  switch (action.type) {\n    // Use to load the state from local storage when the application\n    // starts, but not to set individual habits\n    case SET_STATE: {\n      return action.value;\n    }\n\n    case ADD_HABIT: {\n      const user = state.currentUser;\n\n      if (user) {\n        const userState = state.userStates[user];\n\n        const uid = userState.lastId + 1;\n        const newUserState = {\n          lastId: uid,\n          habits: { ...userState.habits, [uid]: action.value }\n        };\n\n        const newState = {\n          ...state,\n          userStates: { ...state.userStates, [user]: newUserState }\n        };\n\n        return newState;\n      } else {\n        return state;\n      }\n    }\n\n    case EDIT_HABIT: {\n      const user = state.currentUser;\n\n      if (user) {\n        const habit = action.value.habit;\n        const currentUserState = state.userStates[user];\n\n        const newUserState = {\n          ...currentUserState,\n          habits: {\n            ...currentUserState.habits,\n            [action.value.id]: habit\n          }\n        };\n\n        const newState = {\n          ...state,\n          userStates: { ...state.userStates, [user]: newUserState }\n        };\n\n        return newState;\n      } else {\n        return state;\n      }\n    }\n\n    case DELETE_HABIT: {\n      const user = state.currentUser;\n\n      if (user) {\n        const id = action.value;\n        const currentUserState = state.userStates[user];\n\n        const newUserState = {\n          ...currentUserState,\n          habits: removeKey(currentUserState.habits, id)\n        };\n\n        const newState = {\n          ...state,\n          userStates: { ...state.userStates, [user]: newUserState }\n        };\n\n        return newState;\n      } else {\n        return state;\n      }\n    }\n\n    case UPDATE_STREAK: {\n      const user = state.currentUser;\n      if (user) {\n        let currentUserState = state.userStates[user];\n\n        const { id, check } = action.value;\n        const habit = currentUserState.habits[id];\n\n        const streak = habit.streak;\n        streak[streak.length - 1] = check;\n\n        const newUserState = {\n          ...currentUserState,\n          habits: {\n            ...currentUserState.habits,\n            [id]: { ...habit, streak }\n          }\n        };\n\n        const newState = {\n          ...state,\n          userStates: { ...state.userStates, [user]: newUserState }\n        };\n\n        return newState;\n      } else {\n        return state;\n      }\n    }\n\n    case UPDATE_CURRENT_USER: {\n      const currentUser = action.value;\n      const newState = {\n        ...state,\n        currentUser\n      };\n\n      return newState;\n    }\n\n    case REGISTER_USER: {\n      const user = action.value;\n      const habitObj = {\n        lastId: 0,\n        habits: {}\n      };\n\n      const newState = {\n        ...state,\n        userStates: { ...state.userStates, [user]: habitObj }\n      };\n\n      return newState;\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\n// Retrieve usable data for the app and redux\n// state. It takes a parsed JSON state object\n// and returns valid redux state.\nexport const decodeState = parsedState => {\n  let userKeys = Object.keys(parsedState.userStates);\n\n  let decodedUserStates = userKeys.map(user => {\n    return { user, state: decodeUserState(parsedState.userStates[user]) };\n  });\n\n  let accumulatedUserState = decodedUserStates.reduce((acc, userState) => {\n    let { user, state } = userState;\n    return { ...acc, [user]: state };\n  }, {});\n\n  return { ...parsedState, userStates: accumulatedUserState };\n};\n\n// This decodes an individual users state (habits).\n// Expects an object with a lastId and habits key.\nexport const decodeUserState = stateJson => {\n  if (stateJson === {}) {\n    return initialState;\n  } else {\n    const ids = stateJson.habits ? Object.keys(stateJson.habits) : [];\n\n    // Create a new habits object by decoding the date fields for each\n    // habit properly\n    const decodedHabits = ids.reduce((acc, id) => {\n      const parsedHabit = stateJson.habits[id];\n\n      // The date fields have been parsed from strings but have not yet\n      // been parsed into moment date objects\n      const startDate = moment(parsedHabit.startDate, moment.ISO_8601);\n      const endDate = moment(parsedHabit.endDate, moment.ISO_8601);\n\n      // We have to verify that the streak is correct for the habit in\n      // the case that time has passed since the last page load\n      const newHabit = updateHabitStreak({\n        ...parsedHabit,\n        startDate,\n        endDate\n      });\n\n      return { ...acc, [id]: newHabit };\n    }, {});\n\n    // Return the state with parsed habits\n    return { ...stateJson, habits: decodedHabits };\n  }\n};\n","import React from \"react\";\n\nconst Checkbox = props => {\n  return (\n    <label class=\"checkbox-label\">\n      {props.children}\n      {props.disabled ? (\n        <span class=\"checkbox-custom checkbox-disabled rectangular\"></span>\n      ) : (\n        <span class=\"checkbox-custom rectangular\"></span>\n      )}\n    </label>\n  );\n};\n\nexport default Checkbox;\n","import React from \"react\";\nimport Checkbox from \"./Checkbox.js\";\nimport { connect } from \"react-redux\";\nimport { updateStreak } from \"../actions\";\nimport { Link } from \"react-router-dom\";\nimport {\n  NO_STREAK,\n  DISABLED_STREAK,\n  ACTIVE_STREAK,\n  streakStatus\n} from \"../utils/streak\";\nimport { deleteHabit } from \"../actions\";\nimport \"../css/main.css\";\nimport moment from \"moment\";\n\nclass HabitCard extends React.Component {\n  renderStreak(streak, endDate) {\n    const now = moment().startOf(\"day\");\n    const status = streakStatus(streak, endDate, now);\n\n    switch (status) {\n      case NO_STREAK:\n        return <div>This habit hasn't started yet!</div>;\n      case DISABLED_STREAK: {\n        return streak.map((check, index) => {\n          return (\n            <Checkbox key={index} disabled={true}>\n              <input type=\"checkbox\" disabled={true} checked={check} />\n            </Checkbox>\n          );\n        });\n      }\n      case ACTIVE_STREAK: {\n        const lastIndex = streak.length - 1;\n        return streak.map((check, index) => {\n          if (index === lastIndex) {\n            return (\n              <Checkbox key={index}>\n                <input\n                  type=\"checkbox\"\n                  onChange={event => this.handleStreakClick(event)}\n                  checked={check}\n                />\n              </Checkbox>\n            );\n          } else {\n            return (\n              <Checkbox disabled={true} key={index}>\n                <input type=\"checkbox\" disabled={true} checked={check} />\n              </Checkbox>\n            );\n          }\n        });\n      }\n      default: {\n        console.log(\"Oops! Something went wrong\");\n      }\n    }\n  }\n\n  handleStreakClick = event => {\n    const id = this.props.id || this.props.match.params.id;\n    const check = event.target.checked;\n    this.props.dispatch(updateStreak(id, check));\n  };\n\n  handleDeleteClick = (event, id) => {\n    event.preventDefault();\n    this.props.dispatch(deleteHabit(id));\n  };\n\n  renderExpanded() {\n    const { title, goal, streak, startDate, endDate } = this.props.habit;\n    const { name, email } = this.props.habit.accountabilityPartner;\n\n    const endDateToString = endDate ? endDate.format(\"MMMM Do, YYYY\") : null;\n    const startDateToString = startDate\n      ? startDate.format(\"MMMM Do, YYYY\")\n      : null;\n\n    return (\n      <div class=\"section\">\n        <div class=\"card card-border\">\n          <header class=\"card-header card-element-background\">\n            <p class=\"card-header-title header-font\">{title}</p>\n          </header>\n          <div class=\"card-content\">\n            <div class=\"content flex-item\">\n              <div class=\"flex-element\">\n                <h3>Goal</h3>\n                <p>{goal}</p>\n              </div>\n              <div class=\"flex-element\">\n                <h3>Accountability Partner</h3>\n                <p>name: {name}</p>\n                <p>email: {email}</p>\n              </div>\n            </div>\n          </div>\n          <div class=\"card-content\">\n            <div class=\"content\">\n              {startDateToString} - {endDateToString}\n            </div>\n          </div>\n          <div class=\"card-content\">\n            <div class=\"content streak\">\n              {this.renderStreak(streak, endDate)}\n            </div>\n          </div>\n          <footer class=\"card-footer card-element-background\">\n            <Link\n              class=\"card-footer-item is-dark\"\n              to={`/${this.props.id}/edit`}\n            >\n              <strong>Edit</strong>\n            </Link>\n            <a\n              href=\"/\"\n              class=\"card-footer-item is-dark\"\n              onClick={event => {\n                this.handleDeleteClick(event, this.props.id);\n              }}\n            >\n              <strong>Delete</strong>\n            </a>\n          </footer>\n        </div>\n      </div>\n    );\n  }\n\n  renderCollapsed() {\n    const { streak: oldStreak, title, endDate } = this.props.habit;\n\n    let newStreak = oldStreak;\n\n    if (newStreak.length >= 7) {\n      const startOfWeek = newStreak.length - 7;\n      const endOfWeek = newStreak.length;\n      newStreak = newStreak.slice(startOfWeek, endOfWeek);\n    }\n\n    return (\n      <div>\n        <div class=\"compact-card\">\n          <div class=\"compact-card-header\">{title}</div>\n          <div>{this.renderStreak(newStreak, endDate)}</div>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { collapsed, habit } = this.props;\n    if (habit) {\n      return collapsed ? this.renderCollapsed() : this.renderExpanded();\n    } else {\n      return \"\";\n    }\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  let id;\n\n  try {\n    id = ownProps.match.params.id;\n  } catch {\n    id = ownProps.id;\n  }\n\n  const user = state.currentUser;\n  if (user) {\n    return {\n      habit: state.userStates[user].habits[id]\n    };\n  } else {\n    return {\n      habit: null\n    };\n  }\n};\n\nexport default connect(mapStateToProps)(HabitCard);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport HabitCard from \"./HabitCard\";\nimport { getHabitIds } from \"../utils\";\n\nclass Home extends React.Component {\n  habitList() {\n    return this.props.habitIds.map(id => {\n      return (\n        <div key={id}>\n          <HabitCard collapsed={this.props.collapsed} id={id} />\n        </div>\n      );\n    });\n  }\n\n  renderEmpty = () => {\n    return (\n      <div class=\"hero\">\n        <div class=\"hero-body\">\n          <div class=\"container\">\n            <h1 class=\"title\">Create a New Habit!</h1>\n            <div></div>\n            <Link to=\"/new\" class=\"subtitle button banner-button\">\n              Get to it\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    if (this.props.habitIds.length === 0) {\n      return <div class=\"container\">{this.renderEmpty()}</div>;\n    } else {\n      return <div class=\"container\">{this.habitList()}</div>;\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  const user = state.currentUser;\n  return user\n    ? { habitIds: getHabitIds(state.userStates[user].habits) }\n    : { habitIds: [] };\n};\n\nexport default connect(mapStateToProps)(Home);\n","import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport useForm from \"react-hook-form\";\nimport DatePicker from \"react-datepicker\";\nimport { editHabit, addHabit } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { updateHabitStreak } from \"../utils/streak\";\n\nconst Form = props => {\n  const [state, setState] = useState({\n    startDate: props.now,\n    endDate: props.now\n  });\n  const { register, handleSubmit, setValue, errors } = useForm();\n\n  React.useEffect(() => {\n    register({ name: \"startDate\" });\n    register({ name: \"endDate\" });\n  }, [register, setValue]);\n\n  React.useEffect(() => {\n    if (props.habit) {\n      const startDate = props.habit.startDate.toDate();\n      const endDate = props.habit.endDate.toDate();\n      setValue(\"startDate\", startDate);\n      setValue(\"endDate\", endDate);\n      setState({ startDate, endDate });\n    } else {\n      setValue(\"startDate\", props.now);\n      setValue(\"endDate\", props.now);\n    }\n  }, [setValue, props]);\n\n  const handleDatePickerChange = (key, date) => {\n    if (key === \"startDate\" && date > state.endDate) {\n      setValue(\"startDate\", date);\n      setValue(\"endDate\", date);\n      setState({ startDate: date, endDate: date });\n    } else {\n      setValue(key, date);\n      setState({ ...state, [key]: date });\n    }\n  };\n\n  const onSubmit = data => {\n    if (props.habit) {\n      const id = props.match.params.id;\n      const startDate = moment(data.startDate);\n      const endDate = moment(data.endDate);\n      const habit = updateHabitStreak({\n        ...props.habit,\n        ...data,\n        startDate,\n        endDate\n      });\n      props.dispatch(editHabit(habit, id));\n    } else {\n      const startDate = moment(data.startDate);\n      const endDate = moment(data.endDate);\n      const habit = updateHabitStreak({\n        ...data,\n        startDate,\n        endDate,\n        streak: []\n      });\n      props.dispatch(addHabit(habit));\n    }\n    props.history.push(\"/home\");\n  };\n\n  console.log(props);\n\n  return (\n    <form class=\"form-container\" onSubmit={handleSubmit(onSubmit)}>\n      <div class=\"field\">\n        <label class=\"label is-large\">Habit</label>\n        <div class=\"control\">\n          <input\n            class=\"input\"\n            type=\"text\"\n            name=\"title\"\n            defaultValue={props.habit ? props.habit.title : \"\"}\n            placeholder=\"Your new habit.\"\n            ref={register({ required: true })}\n          />\n        </div>\n        {errors.title && <p class=\"help is-danger\">\"A title is required\"</p>}\n      </div>\n      <div class=\"field\">\n        <label class=\"label\">Goal</label>\n        <div class=\"control\">\n          <textarea\n            class=\"textarea\"\n            type=\"text\"\n            name=\"goal\"\n            defaultValue={props.habit ? props.habit.goal : \"\"}\n            placeholder=\"What is your goal?\"\n            ref={register}\n          />\n        </div>\n      </div>\n      <div class=\"field is-grouped is-horizontal\">\n        <div class=\"field-body\">\n          <div class=\"field\">\n            <label class=\"label\">Start Date</label>\n            <div class=\"control\">\n              <DatePicker\n                minDate={props.now}\n                selected={state.startDate}\n                onChange={date => {\n                  handleDatePickerChange(\"startDate\", date);\n                }}\n              />\n            </div>\n          </div>\n          <div class=\"field\">\n            <label class=\"label\">End Date</label>\n            <div class=\"control\">\n              <DatePicker\n                minDate={state.startDate}\n                selected={state.endDate}\n                onChange={date => {\n                  handleDatePickerChange(\"endDate\", date);\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <h3 class=\"label is-large margin-top\">Accountability Partner</h3>\n      <div class=\"field\">\n        <label class=\"label\">Name</label>\n        <div class=\"control\">\n          <input\n            class=\"input\"\n            type=\"text\"\n            name=\"accountabilityPartner.name\"\n            defaultValue={\n              props.habit ? props.habit.accountabilityPartner.name : \"\"\n            }\n            placeholder=\"Your accountability partner's name\"\n            ref={register({\n              maxLength: { value: 40, message: \"This name is too long\" }\n            })}\n          />\n        </div>\n        <p class=\"help is-danger\">\n          {errors[\"accountabilityPartner.name\"] ? (\n            <span>{errors[\"accountabilityPartner.name\"].message}</span>\n          ) : (\n            \"\"\n          )}\n        </p>\n      </div>\n      <div class=\"field\">\n        <label class=\"label\">Email</label>\n        <div class=\"control\">\n          <input\n            class=\"input\"\n            type=\"text\"\n            name=\"accountabilityPartner.email\"\n            defaultValue={\n              props.habit ? props.habit.accountabilityPartner.email : \"\"\n            }\n            placeholder=\"Their email\"\n            ref={register({\n              pattern: {\n                value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n                message: \"Please enter a valid email\"\n              }\n            })}\n          />\n        </div>\n        <p class=\"help is-danger\">\n          {errors[\"accountabilityPartner.email\"] ? (\n            <span>{errors[\"accountabilityPartner.email\"].message}</span>\n          ) : (\n            \"\"\n          )}\n        </p>\n      </div>\n      <div class=\"control margin-top\">\n        <button class=\"button is-link\">Submit</button>\n      </div>\n    </form>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const user = state.currentUser;\n  if (user) {\n    return {\n      habit: state.userStates[user].habits[ownProps.match.params.id]\n    };\n  } else {\n    return {\n      habit: null\n    };\n  }\n};\n\nexport default connect(mapStateToProps)(Form);\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { updateCurrentUser } from \"../actions\";\nimport { getHabitIds } from \"../utils\";\n\nclass NavBar extends React.Component {\n  buttonLabel = () => {\n    if (this.props.collapsed) {\n      return <strong>Expand View</strong>;\n    } else {\n      return <strong>Collapse View</strong>;\n    }\n  };\n\n  handleLogout = () => {\n    let username = null;\n    this.props.dispatch(updateCurrentUser(username));\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const showView =\n      this.props.location.pathname === \"/\" && this.props.habitIds.length > 0;\n    return (\n      <nav class=\"navbar has-shadow\">\n        <div class=\"navbar-brand\">\n          <Link to=\"/\" class=\"navbar-item\">\n            <strong>HabitTracker</strong>\n          </Link>\n        </div>\n        <div class=\"navbar-end\">\n          <div class=\"navbar-item\">\n            <div class=\"buttons\">\n              <Link to=\"/new\" class=\"button is-light\">\n                <strong>New Habit</strong>\n              </Link>\n              {showView && (\n                <div\n                  onClick={event => this.props.toggleCollapse(event)}\n                  class=\"button is-light\"\n                >\n                  {this.buttonLabel()}\n                </div>\n              )}\n              <button\n                onClick={event => this.handleLogout(event)}\n                class=\"button is-light\"\n              >\n                <strong>Logout</strong>\n              </button>\n            </div>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const user = state.currentUser;\n  if (user) {\n    return {\n      habitIds: getHabitIds(state.userStates[user].habits)\n    };\n  } else {\n    return {\n      habitIds: []\n    };\n  }\n};\n\nexport const ConnectedNavBar = connect(mapStateToProps)(NavBar);\n\nexport default withRouter(ConnectedNavBar);\n","export const USERS_KEY = \"users\";\n\n// Insert a new user into local storage when they sign up\nexport const signupUser = user => {\n  try {\n    let oldUsers = JSON.parse(window.localStorage.getItem(USERS_KEY));\n    let newUsers = insertUser(user, oldUsers);\n    window.localStorage.setItem(USERS_KEY, JSON.stringify(newUsers));\n  } catch {\n    console.log(\"Failed to add user due to encoding error\");\n  }\n};\n\n// Inserts a new user and password. Should not overwrite.\nexport const insertUser = (user, users) => {\n  if (!users[user.username]) {\n    return { ...users, [user.username]: user.password };\n  } else {\n    return users;\n  }\n};\n\n// Updates an existing users. Should do nothing if the user\n// doesn't exist, but overwrites if the user does\nexport const updateUser = (user, users) => {\n  if (users[user.username]) {\n    return { ...users, [user.username]: user.password };\n  } else {\n    return users;\n  }\n};\n\n// Check if a username and password combination exists in the users\n// when they try to log in\nexport const checkUser = (user, users) => {\n  if (users[user.username] && users[user.username] === user.password) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport const findUsersKey = () => {\n  if (window.localStorage.getItem(USERS_KEY) === null) {\n    window.localStorage.setItem(USERS_KEY, JSON.stringify({}));\n  }\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport useForm from \"react-hook-form\";\nimport { updateCurrentUser, registerUser } from \"../actions\";\nimport { USERS_KEY, signupUser } from \"../utils/users\";\n\nconst SignupForm = props => {\n  const { register, handleSubmit, errors, setError } = useForm();\n\n  const onSubmit = data => {\n    const users = JSON.parse(window.localStorage.getItem(USERS_KEY));\n\n    if (users[data.username]) {\n      setError(\"username\", \"invalid\", \"Username is not available\");\n    } else if (data.password !== data.verifypassword) {\n      setError(\"password\", \"notMatch\", \"Passwords must match.\");\n      setError(\"password\", \"notMatch\", \"Passwords must match.\");\n    } else {\n      let user = {\n        username: data.username,\n        password: data.password\n      };\n\n      signupUser(user);\n\n      props.dispatch(registerUser(user.username));\n      props.dispatch(updateCurrentUser(user.username));\n      props.history.push(\"/home\");\n    }\n  };\n\n  return (\n    <form class=\"form-container\" onSubmit={handleSubmit(onSubmit)}>\n      <div class=\"field\">\n        <label class=\"label is-large\">Username</label>\n        <div class=\"control\">\n          <input\n            class=\"input\"\n            type=\"text\"\n            name=\"username\"\n            placeholder=\"Your username here\"\n            ref={register({\n              required: \"A username is required\"\n            })}\n          />\n        </div>\n        {errors.username && (\n          <p class=\"help is-danger\">{errors.username.message}</p>\n        )}\n      </div>\n      <div class=\"field\">\n        <label class=\"label is-large\">Password</label>\n        <div class=\"control\">\n          <input\n            class=\"input\"\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Your password here\"\n            ref={register({\n              required: \"A password is required\"\n            })}\n          />\n        </div>\n        {errors.password && (\n          <p class=\"help is-danger\">{errors.password.message}</p>\n        )}\n      </div>\n      <div class=\"field\">\n        <label class=\"label is-large\">Password</label>\n        <div class=\"control\">\n          <input\n            class=\"input\"\n            type=\"password\"\n            name=\"verifypassword\"\n            placeholder=\"Your password here\"\n            ref={register({\n              required: \"A password is required\"\n            })}\n          />\n        </div>\n        {errors.password && (\n          <p class=\"help is-danger\">{errors.password.message}</p>\n        )}\n      </div>\n      <div class=\"control margin-top\">\n        <button type=\"submit\" class=\"button is-link\">\n          Sign Up\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default connect()(SignupForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport useForm from \"react-hook-form\";\nimport { Redirect } from \"react-router-dom\";\nimport { updateCurrentUser } from \"../actions\";\nimport { USERS_KEY, checkUser } from \"../utils/users\";\n\nconst LoginForm = ({ currentUser, ...props }) => {\n  const { register, handleSubmit, errors, setError } = useForm();\n\n  const onSubmit = data => {\n    const users = JSON.parse(window.localStorage.getItem(USERS_KEY));\n    if (checkUser(data, users)) {\n      props.dispatch(updateCurrentUser(data.username));\n      props.history.push(\"/home\");\n    } else {\n      setError(\"username\", \"notMatch\", \"invalid username\");\n      setError(\"password\", \"notMatch\", \"invalid password\");\n    }\n  };\n\n  const renderForm = () => {\n    return (\n      <form class=\"form-container\" onSubmit={handleSubmit(onSubmit)}>\n        <div class=\"field\">\n          <label class=\"label is-large\">Username</label>\n          <div class=\"control\">\n            <input\n              class=\"input\"\n              type=\"text\"\n              name=\"username\"\n              placeholder=\"Your username here\"\n              ref={register({\n                required: \"A username is required\"\n              })}\n            />\n          </div>\n          {errors.username && (\n            <p class=\"help is-danger\">{errors.username.message}</p>\n          )}\n        </div>\n        <div class=\"field\">\n          <label class=\"label is-large\">Password</label>\n          <div class=\"control\">\n            <input\n              class=\"input\"\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Your password here\"\n              ref={register({\n                required: \"A password is required\"\n              })}\n            />\n          </div>\n          {errors.password && (\n            <p class=\"help is-danger\">{errors.password.message}</p>\n          )}\n        </div>\n        <div class=\"login-buttons\">\n          <div class=\"control margin-top\">\n            <button type=\"submit\" class=\"button is-link\">\n              Sign In\n            </button>\n          </div>\n        </div>\n      </form>\n    );\n  };\n  return currentUser ? <Redirect to={{ pathname: \"/home\" }} /> : renderForm();\n};\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.currentUser\n  };\n};\n\nexport default connect(mapStateToProps)(LoginForm);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\n// A wrapper component for a Route which makes sure you are logged\n// in to view its contents\nconst PrivateRoute = ({ currentUser, initialized, render, ...props }) => {\n  if (initialized) {\n    if (currentUser) {\n      return <Route {...props} render={render} />;\n    } else {\n      return (\n        <Route\n          {...props}\n          render={({ location }) => (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: location }\n              }}\n            />\n          )}\n        />\n      );\n    }\n  } else {\n    // App is still loading from local storage\n    return \"Loading...\";\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.currentUser,\n    initialized: state.initialized\n  };\n};\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport cliplist from \"../images/cliplist.png\";\nimport clipshapes from \"../images/clipshapes.png\";\n\nconst LandingPage = props => {\n  const nav = () => {\n    return (\n      <nav class=\"navbar navbar-guest\">\n        <div class=\"navbar-brand\">\n          <strong class=\"navbar-item navbar-item-logo\">HabitTracker</strong>\n        </div>\n        <div class=\"navbar-end\">\n          <div class=\"navbar-item\">\n            <Link to=\"/login\">\n              <strong>Sign In</strong>\n            </Link>\n          </div>\n        </div>\n      </nav>\n    );\n  };\n\n  const hero = () => {\n    return (\n      <section class=\"hero has-background-white\">\n        <div class=\"hero-body\">\n          <div class=\"container\">\n            <div class=\"columns\">\n              <div class=\"column is-6\">\n                <h1 class=\"title is-1 ht-title has-text-left\">\n                  Finally, habits that <em>actually</em> work.\n                </h1>\n                <h2 class=\"subtitle ht-subtitle has-text-left\">\n                  Stick to your habits and resolutions using technology built on\n                  psychological principles while keeping your data 100% private.\n                </h2>\n                <Link to=\"/signup\" class=\"button is-medium is-primary\">\n                  <strong>Get started for free</strong>\n                </Link>\n                <span class=\"help\">\n                  Add as many habits as you want, it's always free.\n                </span>\n              </div>\n              <div class=\"column is-6\">\n                <img alt=\"Woman with empty clipboard\" src={cliplist} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  };\n\n  const heroPrimary = () => {\n    return (\n      <section class=\"hero is-secondary is-bold\">\n        <div class=\"hero-body\">\n          <div class=\"container\">\n            <div class=\"columns\">\n              <div class=\"column is-6\">\n                <img alt=\"woman with shapes\" src={clipshapes} />\n              </div>\n              <div class=\"column is-5\">\n                <p class=\"ht-prop-title\">\n                  Have you ever failed to stick to your habits or resolutions?\n                </p>\n                <p class=\"ht-prop-subtitle\">\n                  HabitTracker helps you succeed in your goals with\n                  tried-and-true psychological principles. Whether you need to\n                  create a new good habit or break a bad old one, HabitTracker\n                  can help.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  };\n\n  const howItWorks = () => {\n    return (\n      <section class=\"hero has-background-white\">\n        <div class=\"hero-body\">\n          <h1 class=\"title how-it-works-title\">How it works</h1>\n          <div class=\"container\">\n            <div class=\"columns is-centered\">\n              <div class=\"column has-text-centered is-4\">\n                <i class=\"far fa-check-square fa-5x\"></i>\n                <p class=\"ht-prop-subtitle\">\n                  Add all of the habits you want to make or break and check them\n                  off by day as you complete them.\n                </p>\n              </div>\n              <div class=\"column has-text-centered is-4\">\n                <i class=\"far fa-clock fa-5x\"></i>\n                <p class=\"ht-prop-subtitle\">\n                  Watch your progress with the streaks feature that shows you\n                  how many days in a row you've completed your habit.\n                </p>\n              </div>\n              <div class=\"column has-text-centered is-4\">\n                <i class=\"far fa-bell fa-5x\"></i>\n                <p class=\"ht-prop-subtitle\">\n                  Stay on track with an accountability partner who will be\n                  alerted via email if you miss a habit three days in a row.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  };\n\n  const footer = () => {\n    return (\n      <section class=\"hero is-secondary is-bold\">\n        <div class=\"hero-body\">\n          <div class=\"container has-text-centered\">\n            <p class=\"footer-title\">Try HabitTracker today for free</p>\n            <Link to=\"/signup\" class=\"button is-medium is-primary\">\n              <strong>Get started</strong>\n            </Link>\n          </div>\n        </div>\n      </section>\n    );\n  };\n\n  const renderLanding = () => {\n    return (\n      <>\n        {nav()}\n        {hero()}\n        {heroPrimary()}\n        {howItWorks()}\n        {footer()}\n      </>\n    );\n  };\n\n  return props.currentUser === null ? (\n    renderLanding()\n  ) : (\n    <Redirect to={{ pathname: \"/home\" }} />\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.currentUser\n  };\n};\n\nexport default connect(mapStateToProps)(LandingPage);\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Form from \"./Form\";\nimport HabitCard from \"./HabitCard\";\nimport NavBar from \"./NavBar\";\nimport SignupForm from \"./SignupForm.js\";\nimport LoginForm from \"./LoginForm\";\nimport { connect } from \"react-redux\";\nimport { setState } from \"../actions\";\nimport { readState } from \"../reducers\";\nimport \"../css/main.css\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport { findUsersKey } from \"../utils/users\";\nimport LandingPage from \"./LandingPage\";\n\nclass App extends React.Component {\n  state = {\n    collapsed: false\n  };\n\n  componentDidMount() {\n    findUsersKey();\n    let state = readState();\n    this.props.dispatch(setState({ ...state, initialized: true }));\n  }\n\n  toggleCollapse = event => {\n    event.preventDefault();\n    this.setState(prevState => ({\n      collapsed: !prevState.collapsed\n    }));\n  };\n\n  renderNavbar = () => {\n    return (\n      <NavBar\n        collapsed={this.state.collapsed}\n        toggleCollapse={this.toggleCollapse}\n      />\n    );\n  };\n\n  render() {\n    return (\n      <Router basename=\"/habit-tracker\">\n        {this.props.currentUser ? this.renderNavbar() : \"\"}\n        <Switch>\n          <Route exact path=\"/\" render={props => <LandingPage {...props} />} />\n          <Route path=\"/login\" render={props => <LoginForm {...props} />} />\n          <Route path=\"/signup\" render={props => <SignupForm {...props} />} />\n          <PrivateRoute\n            path=\"/home\"\n            render={props => (\n              <Home {...props} collapsed={this.state.collapsed} />\n            )}\n          />\n          <PrivateRoute\n            path=\"/new\"\n            render={props => <Form {...props} now={new Date()} />}\n          />\n          <PrivateRoute\n            path=\"/:id/edit\"\n            render={props => <Form {...props} now={new Date()} />}\n          />\n          <PrivateRoute path=\"/:id/show\" component={HabitCard} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.currentUser\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { reducer, writeStateMiddleware } from \"./reducers\";\nimport App from \"./components/App\";\n\nconst store = createStore(reducer, applyMiddleware(writeStateMiddleware));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/cliplist.0b2906ab.png\";","module.exports = __webpack_public_path__ + \"static/media/clipshapes.148cdd9b.png\";"],"sourceRoot":""}