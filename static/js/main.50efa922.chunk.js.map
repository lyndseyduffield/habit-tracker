{"version":3,"sources":["utils/index.js","actions/index.js","reducers/index.js","components/Checkbox.js","components/HabitCard.js","components/Home.js","components/CreateForm.js","components/EditForm.js","components/NavBar.js","components/App.js","index.js"],"names":["getHabitIds","habitsObj","Object","keys","updateHabitStreak","habit","startDate","startOf","endDate","now","moment","newStreak","streak","isAfter","currentLength","length","correctLength","getStreakLength","streakDiff","i","push","slice","diff","ADD_HABIT","EDIT_HABIT","DELETE_HABIT","SET_STATE","UPDATE_STREAK","deleteHabit","id","type","value","updateStreak","check","initialState","lastId","habits","writeState","state","window","localStorage","setItem","JSON","stringify","removeKey","obj","key","filter","objectKey","reduce","accObj","Checkbox","props","class","children","disabled","HabitCard","handleStreakClick","event","match","params","target","checked","dispatch","handleDeleteClick","preventDefault","map","index","lastIndex","onChange","this","title","goal","accountabilityPartner","name","email","endDateToString","format","startDateToString","renderStreak","to","href","onClick","oldStreak","startOfWeek","endOfWeek","collapsed","renderCollapsed","renderExpanded","React","Component","connect","ownProps","Home","renderEmpty","habitIds","habitList","useState","Date","setState","useForm","register","handleSubmit","setValue","errors","useEffect","onDatePickerChange","date","onSubmit","data","addHabit","history","placeholder","ref","required","minDate","selected","maxLength","message","pattern","toDate","handleDatePickerChange","editHabit","defaultValue","NavBar","buttonLabel","console","log","showView","location","pathname","toggleCollapse","withRouter","App","prevState","parse","getItem","decodedHabits","acc","parsedHabit","ISO_8601","newHabit","readState","basename","exact","path","component","CreateForm","EditForm","store","createStore","action","uid","newState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50efa922.chunk.js","sourcesContent":["import moment from \"moment\";\n\nexport const getHabitIds = habitsObj => {\n  return habitsObj ? Object.keys(habitsObj) : [];\n};\n\nexport const flattenHabits = habitsObj => {\n  let ids = getHabitIds(habitsObj);\n  return ids.map(id => {\n    return {\n      id,\n      title: habitsObj[id][\"title\"]\n    };\n  });\n};\n\n// Given a habit, returns a new habit with a verified streak, updated if\n// necessary.\nexport const updateHabitStreak = habit => {\n  const startDate = habit.startDate.startOf(\"day\");\n  const endDate = habit.endDate.startOf(\"day\");\n  const now = moment().startOf(\"day\");\n\n  // We need to replace the old streak in case time has passed since the last\n  // \"user login\" occurred\n  let newStreak = habit.streak;\n\n  // If the habit hasn't started yet, then the streak should be empty\n  if (startDate.isAfter(now, \"day\")) {\n    newStreak = [];\n  } else {\n    // figure out the correct streak length and current streak length\n    const currentLength = habit.streak.length;\n    const correctLength = getStreakLength(now, startDate, endDate);\n\n    // figure out if the current streak length is too long, too short, or is correct\n    if (correctLength > currentLength) {\n      let streakDiff = correctLength - currentLength;\n      for (let i = 0; i < streakDiff; i++) {\n        newStreak.push(false);\n      }\n    } else if (correctLength < currentLength) {\n      newStreak = newStreak.slice(0, correctLength);\n    }\n  }\n\n  return { ...habit, streak: newStreak };\n};\n\n// Given a date, will return number of days difference from that date and\n// today's date until it reached the end date (max difference)\nconst getStreakLength = (now, startDate, endDate) => {\n  // check whether the end date is later or todays date is later and take\n  // the earlier of the two\n  if (endDate.isAfter(now, \"days\")) {\n    return now.diff(startDate, \"days\") + 1;\n  } else {\n    return endDate.diff(startDate, \"days\") + 1;\n  }\n};\n","export const ADD_HABIT = \"ADD_HABIT\";\nexport const EDIT_HABIT = \"EDIT_HABIT\";\nexport const DELETE_HABIT = \"DELETE_HABIT\";\nexport const SET_STATE = \"SET_STATE\";\nexport const UPDATE_STREAK = \"UPDATE_STREAK\";\n\nexport const addHabit = habit => {\n  const action = {\n    type: ADD_HABIT,\n    value: habit\n  };\n  return action;\n};\n\nexport const editHabit = (habit, id) => {\n  const action = {\n    type: EDIT_HABIT,\n    value: {\n      id,\n      habit\n    }\n  };\n  return action;\n};\n\nexport const deleteHabit = id => {\n  const action = {\n    type: DELETE_HABIT,\n    value: id\n  };\n  return action;\n};\n\nexport const setState = state => {\n  const action = {\n    type: SET_STATE,\n    value: state\n  };\n  return action;\n};\n\nexport const updateStreak = (id, check) => {\n  const action = {\n    type: UPDATE_STREAK,\n    value: {\n      id,\n      check\n    }\n  };\n  return action;\n};\n","import moment from \"moment\";\nimport { updateHabitStreak } from \"../utils\";\nimport {\n  ADD_HABIT,\n  EDIT_HABIT,\n  SET_STATE,\n  DELETE_HABIT,\n  UPDATE_STREAK\n} from \"../actions\";\n\nconst initialState = {\n  lastId: 0,\n  habits: {}\n};\n\nconst STATE_KEY = \"state\";\n\n// Write redux state to local storage\n// TODO: Make this middleware to remove effects\nconst writeState = state => {\n  window.localStorage.setItem(STATE_KEY, JSON.stringify(state));\n};\n\n// Retrieve Redux state from local storage\nexport const readState = () => {\n  try {\n    let state = JSON.parse(window.localStorage.getItem(STATE_KEY));\n    if (state === {}) {\n      return initialState;\n    } else {\n      const ids = state.habits ? Object.keys(state.habits) : [];\n\n      // Create a new habits object by decoding the date fields for each\n      // habit properly\n      const decodedHabits = ids.reduce((acc, id) => {\n        const parsedHabit = state.habits[id];\n\n        // The date fields have been parsed from strings but have not yet\n        // been parsed into moment date objects\n        const startDate = moment(parsedHabit.startDate, moment.ISO_8601);\n        const endDate = moment(parsedHabit.endDate, moment.ISO_8601);\n\n        // We have to verify that the streak is correct for the habit in\n        // the case that time has passed since the last page load\n        const newHabit = updateHabitStreak({\n          ...parsedHabit,\n          startDate,\n          endDate\n        });\n\n        return { ...acc, [id]: newHabit };\n      }, {});\n\n      // Return the state with parsed habits\n      return { ...state, habits: decodedHabits };\n    }\n  } catch {\n    /* eslint-disable-next-line no-console */\n    console.log(\"Failed to read state from local storage\");\n    return initialState;\n  }\n};\n\nexport function reducer(state = initialState, action) {\n  switch (action.type) {\n    // Use to load the state from local storage when the application\n    // starts, but not to set individual habits\n    case SET_STATE: {\n      return action.value;\n    }\n    case ADD_HABIT: {\n      const uid = state.lastId + 1;\n      const newState = {\n        lastId: uid,\n        habits: { ...state.habits, [uid]: action.value }\n      };\n      writeState(newState);\n      return newState;\n    }\n    case EDIT_HABIT: {\n      const habit = action.value.habit;\n      const newState = {\n        ...state,\n        habits: { ...state.habits, [action.value.id]: habit }\n      };\n      writeState(newState);\n      return newState;\n    }\n    case DELETE_HABIT: {\n      let id = action.value;\n      const newState = {\n        ...state,\n        habits: removeKey(state.habits, id)\n      };\n      writeState(newState);\n      return newState;\n    }\n    case UPDATE_STREAK: {\n      const { id, check } = action.value;\n      const habit = state.habits[id];\n\n      let streak = habit.streak;\n      streak[streak.length - 1] = check;\n\n      const newState = {\n        ...state,\n        habits: {\n          ...state.habits,\n          [id]: { ...habit, streak }\n        }\n      };\n\n      writeState(newState);\n      return newState;\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\n// Removes a top-level key from an object, if it exists.\n// Immutable.\nfunction removeKey(obj, key) {\n  let objectKeys = Object.keys(obj);\n  let filteredKeys = objectKeys.filter(objectKey => key !== objectKey);\n  return filteredKeys.reduce((accObj, objectKey) => {\n    return { ...accObj, [objectKey]: obj[objectKey] };\n  }, {});\n}\n","import React from \"react\";\n\nconst Checkbox = props => {\n  return (\n    <label class=\"checkbox-label\">\n      {props.children}\n      {props.disabled ? (\n        <span class=\"checkbox-custom checkbox-disabled rectangular\"></span>\n      ) : (\n        <span class=\"checkbox-custom rectangular\"></span>\n      )}\n    </label>\n  );\n};\n\nexport default Checkbox;\n","import React from \"react\";\nimport Checkbox from \"./Checkbox.js\";\nimport { connect } from \"react-redux\";\nimport { updateStreak } from \"../actions\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { deleteHabit } from \"../actions\";\nimport \"../css/main.css\";\n\nclass HabitCard extends React.Component {\n  renderStreak(streak, endDate) {\n    // If there is no streak then the habit has not yet begun\n    if (streak.length === 0) {\n      return <div>This habit hasn't started yet!</div>;\n    }\n\n    // If now is after the end date then the habit has already ended. If the\n    // habit has already ended then the entire streak should be disabled.\n    const now = moment().startOf(\"day\");\n    if (now.isAfter(endDate, \"days\")) {\n      return streak.map((check, index) => {\n        return (\n          <Checkbox disabled={true}>\n            <input\n              key={index}\n              type=\"checkbox\"\n              disabled={true}\n              checked={check}\n            />\n          </Checkbox>\n        );\n      });\n    }\n\n    // Otherwise, the streak is non-empty and is active, so all days in the\n    // streak should be disabled except for the last one.\n    else {\n      const lastIndex = streak.length - 1;\n      return streak.map((check, index) => {\n        if (index === lastIndex) {\n          return (\n            <Checkbox>\n              <input\n                key={index}\n                type=\"checkbox\"\n                onChange={event => this.handleStreakClick(event)}\n                checked={check}\n              />\n            </Checkbox>\n          );\n        } else {\n          return (\n            <Checkbox disabled={true}>\n              <input\n                key={index}\n                type=\"checkbox\"\n                disabled={true}\n                checked={check}\n              />\n            </Checkbox>\n          );\n        }\n      });\n    }\n  }\n\n  handleStreakClick = event => {\n    const id = this.props.id || this.props.match.params.id;\n    const check = event.target.checked;\n    this.props.dispatch(updateStreak(id, check));\n  };\n\n  handleDeleteClick = (event, id) => {\n    event.preventDefault();\n    this.props.dispatch(deleteHabit(id));\n  };\n\n  renderExpanded() {\n    const { title, goal, streak, startDate, endDate } = this.props.habit;\n    const { name, email } = this.props.habit.accountabilityPartner;\n\n    const endDateToString = endDate ? endDate.format(\"MMMM Do, YYYY\") : null;\n    const startDateToString = startDate\n      ? startDate.format(\"MMMM Do, YYYY\")\n      : null;\n\n    return (\n      <div class=\"section\">\n        <div class=\"card card-border\">\n          <header class=\"card-header card-element-background\">\n            <p class=\"card-header-title header-font\">{title}</p>\n          </header>\n          <div class=\"card-content\">\n            <div class=\"content flex-item\">\n              <div class=\"flex-element\">\n                <h3>Goal</h3>\n                <p>{goal}</p>\n              </div>\n              <div class=\"flex-element\">\n                <h3>Accountability Partner</h3>\n                <p>name: {name}</p>\n                <p>email: {email}</p>\n              </div>\n            </div>\n          </div>\n          <div class=\"card-content\">\n            <div class=\"content\">\n              {startDateToString} - {endDateToString}\n            </div>\n          </div>\n          <div class=\"card-content\">\n            <div class=\"content streak\">\n              {this.renderStreak(streak, endDate)}\n            </div>\n          </div>\n          <footer class=\"card-footer card-element-background\">\n            <Link\n              class=\"card-footer-item is-dark\"\n              to={`/${this.props.id}/edit`}\n            >\n              <strong>Edit</strong>\n            </Link>\n            <a\n              href=\"/\"\n              class=\"card-footer-item is-dark\"\n              onClick={event => {\n                this.handleDeleteClick(event, this.props.id);\n              }}\n            >\n              <strong>Delete</strong>\n            </a>\n          </footer>\n        </div>\n      </div>\n    );\n  }\n\n  renderCollapsed() {\n    const { streak: oldStreak, title, endDate } = this.props.habit;\n\n    let newStreak = oldStreak;\n\n    if (newStreak.length >= 7) {\n      const startOfWeek = newStreak.length - 7;\n      const endOfWeek = newStreak.length;\n      newStreak = newStreak.slice(startOfWeek, endOfWeek);\n    }\n\n    return (\n      <div>\n        <div class=\"compact-card\">\n          <div class=\"compact-card-header\">{title}</div>\n          <div>{this.renderStreak(newStreak, endDate)}</div>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { collapsed } = this.props;\n    return collapsed ? this.renderCollapsed() : this.renderExpanded();\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  let id;\n\n  try {\n    id = ownProps.match.params.id;\n  } catch {\n    id = ownProps.id;\n  }\n\n  return {\n    habit: state.habits[id]\n  };\n};\n\nexport default connect(mapStateToProps)(HabitCard);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport HabitCard from \"./HabitCard\";\nimport { getHabitIds } from \"../utils\";\n\nclass Home extends React.Component {\n  habitList() {\n    return this.props.habitIds.map(id => {\n      return (\n        <div key={id}>\n          <HabitCard collapsed={this.props.collapsed} id={id} />\n        </div>\n      );\n    });\n  }\n\n  renderEmpty = () => {\n    return (\n      <div class=\"hero\">\n        <div class=\"hero-body\">\n          <div class=\"container\">\n            <h1 class=\"title\">Create a New Habit!</h1>\n            <div></div>\n            <Link to=\"/new\" class=\"subtitle button banner-button\">\n              Get to it\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    if (this.props.habitIds.length === 0) {\n      return <div class=\"container\">{this.renderEmpty()}</div>;\n    } else {\n      return <div class=\"container\">{this.habitList()}</div>;\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    habitIds: getHabitIds(state.habits)\n  };\n};\n\nexport default connect(mapStateToProps)(Home);\n","import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport useForm from \"react-hook-form\";\nimport DatePicker from \"react-datepicker\";\nimport { addHabit } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"../css/main.css\";\nimport { updateHabitStreak } from \"../utils\";\n\nconst CreateForm = props => {\n  const [state, setState] = useState({\n    startDate: new Date(),\n    endDate: new Date()\n  });\n\n  const { register, handleSubmit, setValue, errors } = useForm();\n\n  React.useEffect(() => {\n    register({ name: \"startDate\" });\n    register({ name: \"endDate\" });\n    setValue(\"startDate\", new Date());\n    setValue(\"endDate\", new Date());\n  }, [register, setValue]);\n\n  const onSubmit = data => {\n    const startDate = moment(data.startDate);\n    const endDate = moment(data.endDate);\n    const habit = updateHabitStreak({\n      ...data,\n      startDate,\n      endDate,\n      streak: []\n    });\n    props.dispatch(addHabit(habit));\n    props.history.push(\"/\");\n  };\n\n  const onDatePickerChange = (key, date) => {\n    if (key === \"startDate\" && date > state.endDate) {\n      setValue(\"startDate\", date);\n      setValue(\"endDate\", date);\n      setState({ startDate: date, endDate: date });\n    } else {\n      setValue(key, date);\n      setState({ ...state, [key]: date });\n    }\n  };\n\n  return (\n    <form class=\"form-container\" onSubmit={handleSubmit(onSubmit)}>\n      <div class=\"field\">\n        <label class=\"label is-large\">Habit</label>\n        <div class=\"control\">\n          <input\n            class=\"input\"\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Your new habit\"\n            ref={register({ required: true })}\n          />\n        </div>\n        {errors.title && <p class=\"help is-danger\">\"A title is required\"</p>}\n      </div>\n      <div class=\"field\">\n        <label class=\"label\">Goal</label>\n        <div class=\"control\">\n          <textarea\n            class=\"textarea\"\n            type=\"text\"\n            name=\"goal\"\n            placeholder=\"What is your goal?\"\n            ref={register}\n          />\n        </div>\n      </div>\n      <div class=\"field is-grouped is-horizontal\">\n        <div class=\"field-body\">\n          <div class=\"field\">\n            <label class=\"label\">Start Date</label>\n            <div class=\"control\">\n              <DatePicker\n                class=\"dropdown\"\n                minDate={new Date()}\n                selected={state.startDate}\n                onChange={date => {\n                  onDatePickerChange(\"startDate\", date);\n                }}\n              />\n            </div>\n          </div>\n          <div class=\"field\">\n            <label class=\"label\">End Date</label>\n            <div class=\"control\">\n              <DatePicker\n                minDate={state.startDate}\n                selected={state.endDate}\n                onChange={date => {\n                  onDatePickerChange(\"endDate\", date);\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <h3 class=\"label is-large margin-top\">Accountability Partner</h3>\n      <div class=\"field\">\n        <label class=\"label\">Name</label>\n        <div class=\"control\">\n          <input\n            class=\"input\"\n            type=\"text\"\n            name=\"accountabilityPartner.name\"\n            placeholder=\"Your accountability partner's name\"\n            ref={register({\n              maxLength: { value: 40, message: \"This name is too long\" }\n            })}\n          />\n        </div>\n        {errors[\"accountabilityPartner.name\"] && (\n          <p class=\"help is-danger\">\n            <span>{errors[\"accountabilityPartner.name\"].message}</span>\n          </p>\n        )}\n      </div>\n      <div class=\"field\">\n        <label class=\"label\">Email</label>\n        <div class=\"control\">\n          <input\n            class=\"input\"\n            type=\"text\"\n            name=\"accountabilityPartner.email\"\n            placeholder=\"Their email\"\n            ref={register({\n              pattern: {\n                value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n                message: \"Please enter a valid email\"\n              }\n            })}\n          />\n        </div>\n        {errors[\"accountabilityPartner.email\"] && (\n          <p class=\"help is-danger\">\n            <span>{errors[\"accountabilityPartner.email\"].message}</span>\n          </p>\n        )}\n      </div>\n      <div class=\"control margin-top\">\n        <button class=\"button is-link\">Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default connect()(CreateForm);\n","import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport useForm from \"react-hook-form\";\nimport DatePicker from \"react-datepicker\";\nimport { editHabit } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { updateHabitStreak } from \"../utils\";\n\nconst EditForm = props => {\n  const [state, setState] = useState({\n    startDate: new Date(),\n    endDate: new Date()\n  });\n  const { register, handleSubmit, setValue, errors } = useForm();\n\n  React.useEffect(() => {\n    register({ name: \"startDate\" });\n    register({ name: \"endDate\" });\n  }, [register, setValue]);\n\n  React.useEffect(() => {\n    if (props.habit) {\n      const startDate = props.habit.startDate.toDate();\n      const endDate = props.habit.endDate.toDate();\n      setValue(\"startDate\", startDate);\n      setValue(\"endDate\", endDate);\n      setState({ startDate, endDate });\n    }\n  }, [setValue, props.habit]);\n\n  const handleDatePickerChange = (key, date) => {\n    if (key === \"startDate\" && date > state.endDate) {\n      setValue(\"startDate\", date);\n      setValue(\"endDate\", date);\n      setState({ startDate: date, endDate: date });\n    } else {\n      setValue(key, date);\n      setState({ ...state, [key]: date });\n    }\n  };\n\n  const onSubmit = data => {\n    const id = props.match.params.id;\n    const startDate = moment(data.startDate);\n    const endDate = moment(data.endDate);\n    const habit = updateHabitStreak({\n      ...props.habit,\n      ...data,\n      startDate,\n      endDate\n    });\n    props.dispatch(editHabit(habit, id));\n    props.history.push(\"/\");\n  };\n\n  return (\n    <form class=\"form-container\" onSubmit={handleSubmit(onSubmit)}>\n      <div class=\"field\">\n        <label class=\"label is-large\">Habit</label>\n        <div class=\"control\">\n          <input\n            class=\"input\"\n            type=\"text\"\n            name=\"title\"\n            defaultValue={props.habit && props.habit.title}\n            ref={register({ required: true })}\n          />\n        </div>\n        {errors.title && <p class=\"help is-danger\">\"A title is required\"</p>}\n      </div>\n      <div class=\"field\">\n        <label class=\"label\">Goal</label>\n        <div class=\"control\">\n          <textarea\n            class=\"textarea\"\n            type=\"text\"\n            name=\"goal\"\n            defaultValue={props.habit && props.habit.goal}\n            ref={register}\n          />\n        </div>\n      </div>\n      <div class=\"field is-grouped is-horizontal\">\n        <div class=\"field-body\">\n          <div class=\"field\">\n            <label class=\"label\">Start Date</label>\n            <div class=\"control\">\n              <DatePicker\n                minDate={new Date()}\n                selected={state.startDate}\n                onChange={date => {\n                  handleDatePickerChange(\"startDate\", date);\n                }}\n              />\n            </div>\n          </div>\n          <div class=\"field\">\n            <label class=\"label\">End Date</label>\n            <div class=\"control\">\n              <DatePicker\n                minDate={state.startDate}\n                selected={state.endDate}\n                onChange={date => {\n                  handleDatePickerChange(\"endDate\", date);\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <h3 class=\"label is-large margin-top\">Accountability Partner</h3>\n      <div class=\"field\">\n        <label class=\"label\">Name</label>\n        <div class=\"control\">\n          <input\n            class=\"input\"\n            type=\"text\"\n            name=\"accountabilityPartner.name\"\n            defaultValue={props.habit && props.habit.accountabilityPartner.name}\n            ref={register({\n              maxLength: { value: 40, message: \"This name is too long\" }\n            })}\n          />\n        </div>\n        <p class=\"help is-danger\">\n          {errors[\"accountabilityPartner.name\"] ? (\n            <span>{errors[\"accountabilityPartner.name\"].message}</span>\n          ) : (\n            \"\"\n          )}\n        </p>\n      </div>\n      <div class=\"field\">\n        <label class=\"label\">Email</label>\n        <div class=\"control\">\n          <input\n            class=\"input\"\n            type=\"text\"\n            name=\"accountabilityPartner.email\"\n            defaultValue={\n              props.habit && props.habit.accountabilityPartner.email\n            }\n            ref={register({\n              pattern: {\n                value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n                message: \"Please enter a valid email\"\n              }\n            })}\n          />\n        </div>\n        <p class=\"help is-danger\">\n          {errors[\"accountabilityPartner.email\"] ? (\n            <span>{errors[\"accountabilityPartner.email\"].message}</span>\n          ) : (\n            \"\"\n          )}\n        </p>\n      </div>\n      <div class=\"control margin-top\">\n        <button class=\"button is-link\">Submit</button>\n      </div>\n    </form>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    habit: state.habits[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps)(EditForm);\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getHabitIds } from \"../utils\";\n\nclass NavBar extends React.Component {\n  buttonLabel = () => {\n    if (this.props.collapsed) {\n      return <strong>Expand View</strong>;\n    } else {\n      return <strong>Collapse View</strong>;\n    }\n  };\n\n  render() {\n    console.log(this.props);\n    const showView =\n      this.props.location.pathname === \"/\" && this.props.habitIds.length > 0;\n    return (\n      <nav class=\"navbar has-shadow\">\n        <div class=\"navbar-brand\">\n          <div class=\"navbar-item\">\n            <strong>HabitTracker</strong>\n          </div>\n        </div>\n        <div class=\"navbar-end\">\n          <div class=\"navbar-item\">\n            <div class=\"buttons\">\n              <Link to=\"/new\" class=\"button is-light\">\n                <strong>New Habit</strong>\n              </Link>\n              {showView && (\n                <div\n                  onClick={event => this.props.toggleCollapse(event)}\n                  class=\"button is-light\"\n                >\n                  {this.buttonLabel()}\n                </div>\n              )}\n              <Link to=\"/\" class=\"button is-light\">\n                Home\n              </Link>\n            </div>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    habitIds: getHabitIds(state.habits)\n  };\n};\n\nexport default connect(mapStateToProps)(withRouter(NavBar));\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport CreateForm from \"./CreateForm\";\nimport EditForm from \"./EditForm\";\nimport HabitCard from \"./HabitCard\";\nimport NavBar from \"./NavBar\";\nimport { connect } from \"react-redux\";\nimport { setState } from \"../actions\";\nimport { readState } from \"../reducers\";\nimport \"../css/main.css\";\n\nclass App extends React.Component {\n  state = {\n    collapsed: false\n  };\n\n  toggleCollapse = event => {\n    event.preventDefault();\n    this.setState(prevState => ({\n      collapsed: !prevState.collapsed\n    }));\n  };\n\n  componentDidMount() {\n    let state = readState();\n    this.props.dispatch(setState(state));\n  }\n\n  render() {\n    return (\n      <Router basename=\"/habit-tracker\">\n        <NavBar\n          collapsed={this.state.collapsed}\n          toggleCollapse={this.toggleCollapse}\n        />\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            component={() => <Home collapsed={this.state.collapsed} />}\n          />\n          <Route path=\"/new\" component={CreateForm} />\n          <Route path=\"/:id/edit\" component={EditForm} />\n          <Route path=\"/:id/show\" component={HabitCard} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default connect()(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { reducer } from \"./reducers\";\nimport App from \"./components/App\";\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}